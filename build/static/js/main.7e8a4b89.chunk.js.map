{"version":3,"sources":["state/router-slice.js","layout/grid-items.js","components/tooltip.js","layout/nav-list.js","components/search-field.js","app/locale-list-tools.js","state/locales-slice.js","app/constants.js","state/app-settings-slice.js","app/manage-query-results.js","app/weather-item.js","app/fetch-weather-for-locale.js","layout/header.js","layout/navbar-layout.js","app/note-list-tools.js","state/notes-slice.js","layout/card.js","components/prompt-modal.js","layout/results-table.js","pages/home/home-body.js","pages/home/empty-state.js","pages/home/index.js","pages/details/icon-selector.js","pages/details/detail-card-elements/main-info-container.js","pages/details/detail-card-elements/detailed-info-container.js","app/get-direction-for-degrees.js","components/note-input.js","pages/details/detail-card-elements/notes/note-element.js","pages/details/detail-card-elements/notes/note-container.js","pages/details/detail-card.js","pages/details/index.js","pages/about/index.js","pages/error_page/index.js","pages/help/index.js","router.js","state/state.js","state/persistence/save-load.js","App.js","serviceWorker.js","index.js"],"names":["routerSlice","createSlice","name","initialState","active","allRoutes","home","details","about","help","error","reducers","updateRoute","state","payload","actions","selectActive","router","selectAllRoutes","isArray","Array","Grid","styled","div","p","columns","join","rows","gridGap","Cell","col","row","TooltipContainer","y","x","TooltipLabel","Tooltip","show","text","Nav","width","NavItem","NavText","Header","HeaderCell","Logo","height","id","x1","x2","offset","style","stopColor","stopOpacity","fill","fontSize","fontWeight","NavEntry","navOpen","icon","onClick","noop","activeRoute","toggleNavWidth","dispatch","useDispatch","React","useState","tooltip","setTooltip","showTooltip","evt","target","getBoundingClientRect","right","top","hideTooltip","useEffect","className","onMouseOver","stopPropagation","onMouseOut","InputContainer","SearchBar","input","attrs","type","SearchButton","onSubmit","searchRef","setText","placeholder","onInput","value","onKeyUp","key","length","ref","mergeLists","oldList","newList","omitFavorites","oldCopy","slice","newCopy","output","intersectionWith","isEqual","oldDifference","differenceWith","newDifference","copiedCities","isEmpty","forEach","entry","idx","findIndex","o","city","localeCompare","push","updatedEntry","country","favorited","observationTime","temperature","scale","descriptions","windDirection","windSpeed","pressure","rain","snow","humidity","cloudCover","feelsLike","visibility","pullAllWith","a","b","concatenated","concat","sortLocaleList","list","sortListByCity","getLocaleByCity","TypeError","i","swap","items","left","temp","undefined","pivot","Math","floor","j","partition","localesSlice","locales","setLocales","sorted","mergeLocales","allLocales","merged","setFavorite","item","favorite","deleteById","filter","_item","selectLocales","selectLocaleById","getLocaleById","METRIC_UNITS","precip","totalSnow","FAHRENHEIT_UNITS","SCIENTIFIC_UNITS","COUNTRY_CODES","STATE_CODES","appSettingsSlice","units","firstVisit","setUnits","setFirstVisit","setNavOpen","selectUnits","settings","selectFirstVisit","selectNavOpen","parseResults","results","unit","status","timezone","hoursMinutesIsolated","DateTime","fromSeconds","dt","toUTC","toString","split","test","dateString","uniqueId","sys","round","main","weather","wind","speed","deg","clouds","all","feels_like","fetchWeather","locale","scaleIsValid","axiosRequest","then","data","catch","err","console","log","getWeatherByCoordinates","lat","lon","axiosByCoords","fetchList","localeList","Promise","vals","fetchUpdates","params","appid","process","q","axios","get","res","valid","ScaleButton","processSearchTerms","val","values","trim","searchString","current","findKey","CONSTANTS","alreadyCode","has","useSelector","useRef","responseReceived","setResponseReceived","setCity","newLocale","handleUnitChange","copy","parsed","result","handleSubmit","getWeather","response","bottom","setTimeout","NavbarLayout","NavCell","Body","navWidth","BodyContents","Main","navbarExpanded","sortByDate","sortListByDate","timeStamp","notesSlice","notes","setNotes","mergeNotes","allNotes","oldDistinct","newDistinct","copiedNotes","updated","body","mergeNoteLists","deleteByLocale","localeId","selectNotesByLocale","getNotesByLocale","Card","ConfirmButton","CancelButton","Parent","visible","Prompt","PromptCell","PromptModal","header","onConfirm","onCancel","padding","ListEntryCard","CityCell","TempCell","ListEntry","setState","showPrompt","getUnits","showHeartTooltip","activeHeartTooltip","showEyeTooltip","activeEyeTooltip","hideAllTooltips","activeDeleteTooltip","handleDeleteClicked","cursor","Table","map","ListCell","WaitingText","HomeList","loaded","setList","promptModalVisible","activeEntry","fav","normal","reorderByFavorite","updateList","bool","IconContainer","TextContainer","HiddenHeader","h1","EmptyState","defaultQueries","setLoaded","geolocation","setGeolocation","storedLocales","getWeatherByGeolocation","location","coords","latitude","long","longitude","match","navigator","getCurrentPosition","permissions","query","onchange","getWeatherList","OfflineBody","beforeNight","time","LocationNameText","IconCell","TemperatureText","FeelsLikeText","MainInfoContainer","keyword","getIconForKeyword","InfoLabel","InfoText","HeartIconContainer","DetailedInfoContainer","desc","Fragment","inRange","getDirectionForDegrees","NewNoteInput","textarea","Button","submit","CharTracker","NoteInput","setValue","setError","textFieldRef","focus","hideTooltips","handleCancel","maxLength","onChange","ParentGrid","NoteDisplay","TimestampDisplay","NoteModule","note","handleEditClicked","NoteEntryGrid","NotesCell","NotesContainer","Date","showNewNoteField","setShowNewNoteField","editActive","setEditActive","handleEditSubmitted","edited","newNote","StyledCard","Divider","hr","DetailsCard","Details","HeaderText","BodyText","href","rel","About","ErrorPage","currentRoute","SectionHeader","span","Help","store","configureStore","reducer","routerReducer","localesReducer","notesReducer","appSettingsReducer","preloadedState","serialized","localStorage","getItem","JSON","parse","loadState","subscribe","throttle","stringify","setItem","saveState","getState","library","add","faUmbrella","faSearch","faEye","faMinusCircle","faHome","faInfoCircle","faQuestionCircle","fullHeart","emptyHeart","faSun","faMoon","faCloudSun","faCloudMoon","faCloudSunRain","faCloudMoonRain","faSmog","faSnowflake","faWind","faCloudRain","faBolt","faCloudShowersHeavy","faSurprise","faStickyNote","faEdit","faEraser","faPaperPlane","faTrash","faCheck","faTimes","App","AppWrapper","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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,GAAM,aACN,GAAM,OACN,GAAM,YACN,GAAM,WACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,kCACN,GAAM,gCACN,GAAM,WACN,GAAM,YACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,4BACN,GAAM,OACN,GAAM,UACN,GAAM,cACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,SACN,GAAM,aACN,GAAM,mCACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,yBACN,GAAM,gBACN,GAAM,YACN,GAAM,aACN,GAAM,QACN,GAAM,YACN,GAAM,aACN,GAAM,SACN,GAAM,WACN,GAAM,WACN,GAAM,OACN,GAAM,QACN,GAAM,mBACN,GAAM,aACN,GAAM,aACN,GAAM,YACN,GAAM,UACN,GAAM,SACN,GAAM,kCACN,GAAM,UACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,aACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,QACN,GAAM,cACN,GAAM,uBACN,GAAM,gBACN,GAAM,cACN,GAAM,YACN,GAAM,QACN,GAAM,UACN,GAAM,OACN,GAAM,iBACN,GAAM,2BACN,GAAM,SACN,GAAM,OACN,GAAM,WACN,GAAM,QACN,GAAM,kCACN,GAAM,SACN,GAAM,mBACN,GAAM,WACN,GAAM,OACN,GAAM,cACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,cACN,GAAM,QACN,GAAM,UACN,GAAM,UACN,GAAM,qBACN,GAAM,SACN,GAAM,mBACN,GAAM,eACN,GAAM,wBACN,GAAM,cACN,GAAM,eACN,GAAM,4BACN,GAAM,+BACN,GAAM,QACN,GAAM,aACN,GAAM,wBACN,GAAM,eACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,eACN,GAAM,YACN,GAAM,WACN,GAAM,WACN,GAAM,kBACN,GAAM,UACN,GAAM,eACN,GAAM,kC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","file":"static/js/main.7e8a4b89.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * routerSlice stores state information related to the current active route as well as all available routes.\n */\nexport const routerSlice = createSlice({\n\tname: \"router\",\n\tinitialState: {\n\t\tactive: \"home\",\n\t\tallRoutes: {\n\t\t\thome: \"home\",\n\t\t\tdetails: \"details-\",\n\t\t\tabout: \"about\",\n\t\t\thelp: \"help\",\n\t\t\terror: \"error\",\n\t\t}\n\t},\n\treducers: {\n\t\tupdateRoute: (state, { payload }) => {\n\t\t\tstate.active = payload;\n\t\t}\n\t}\n});\n\nexport const { updateRoute } = routerSlice.actions;\n\nexport const selectActive = state => state.router.active;\nexport const selectAllRoutes = state => state.router.allRoutes;\n\nexport default routerSlice.reducer;","import styled from \"styled-components\";\n\nconst { isArray } = Array;\n\nexport const Grid = styled.div`\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tdisplay: grid;\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\n\tgrid-template-columns: ${p => {\n\t\tswitch(true) {\n\t\t\tcase p.columns && isArray(p.columns):\n\t\t\t\treturn p.columns.join(\" \");\n\t\t\tcase p.columns && !isArray(p.columns):\n\t\t\t\treturn p.columns;\n\t\t\tdefault:\n\t\t\t\treturn \"auto\";\n\t\t}\n\t}};\n\n\tgrid-template-rows: ${p => {\n\t\tswitch (true) {\n\t\t\tcase p.rows && isArray(p.rows):\n\t\t\t\treturn p.rows.join(\" \");\n\t\t\tcase p.rows && !isArray(p.rows):\n\t\t\t\treturn p.rows;\n\t\t\tdefault:\n\t\t\t\treturn \"auto\";\n\t\t}\n\t}};\n\n\tgrid-gap: ${p => p.gridGap ? p.gridGap : \"0\"};\n`;\n\nexport const Cell = styled.div`\n\tposition: relative;\n\tgrid-column: ${p => p.col ? p.col : \"1\"};\n\tgrid-row: ${p => p.row ? p.row : \"1\"};\n\theight: 100%;\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TooltipContainer = styled.div`\n\tposition: fixed;\n\ttop: ${p => p.y ? p.y : 0}px;\n\tleft: ${p => p.x ? p.x : 0}px;\n\tz-index: 100;\n\tfont-weight: 300;\n\ttext-align: left;\n\ttext-align: start;\n\tdisplay: inline-block;\n\tmargin-bottom: 5px;\n\tuser-select: none;\n`;\n\nconst TooltipLabel = styled.div`\n\tmax-width: 200px;\n\tpadding: 3px 8px;\n\tcolor: rgb(255, 255, 255);\n\tbackground-color: rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\tposition: fixed;\n`;\n\nconst Tooltip = ({\n\tx,\n\ty,\n\tshow,\n\ttext,\n}) => {\n\n\treturn (\n\t\t<>\n\t\t\t{show &&\n\t\t\t\t<TooltipContainer x={x} y={y}>\n\t\t\t\t\t<TooltipLabel>{text}</TooltipLabel>\n\t\t\t\t</TooltipContainer>\n\t\t\t}\n\t\t</>\n\t)\n};\n\nexport default Tooltip;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"./grid-items\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { updateRoute } from \"../state/router-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { noop } from \"lodash\";\nimport Tooltip from \"../components/tooltip\";\n\nconst Nav = styled(Grid)`\n\tgrid-gap: 0;\n\twidth: ${p => p.width ? p.width : \"initial\"};\n\ttransition-property: width;\n\ttransition: 0.5s;\n`;\n\nconst NavItem = styled(Grid)`\n\tcursor: pointer;\n\tcolor: rgb(255, 255, 255);\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\tbackground-color: ${p => p.active ? \"rgba(255, 255, 255, 0.2)\" : \"transparent\"};\n\twidth: 90%;\n\tmargin-left: 10%;\n\tborder-radius: 18px 0 0 18px;\n\theight: 100%;\n\topacity: 0.7;\n\n\t:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst NavText = styled(Cell)`\n\tline-height: 2.75em;\n\tfont-size: 0.75em;\n\tfont-weight: 600;\n\ttext-align: right;\n\twidth: 100%;\n\tpadding-right: 1em;\n`;\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tcursor: pointer;\n\theight: 100%;\n\twidth: ${p => p.width ? p.width : \"initial\"};\n\n\t.logo-icon {\n\t\tposition: relative;\n\t\ttransform: scale(150%);\n\t\tmargin-left: 0.5em;\n\t}\n`;\n\nconst HeaderCell = styled(Cell)`\n`;\n\nconst Logo = () => {\n\treturn (\n\t\t<svg height=\"1em\" width=\"80%\">\n\t\t\t<defs>\n\t\t\t\t<linearGradient id=\"logo-gradient\" x1=\"0%\" x2=\"100%\">\n\t\t\t\t\t<stop offset=\"0%\" style={{ stopColor: \"#e3ffe7\", stopOpacity: 1}}/>\n\t\t\t\t\t<stop offset=\"100%\" style={{ stopColor: \"#d9e7ff\", stopOpacity: 1 }}/>\n\t\t\t\t</linearGradient>\n\t\t\t</defs>\n\t\t\t<text x=\"10\" y=\"15\" style={{fill: `url(#logo-gradient)`}} fontSize=\"1.1em\" fontWeight=\"800\">Umbrella Whether</text>\n\t\t</svg> \n\t)\n}\n\nconst NavEntry = ({ navOpen, icon, text, active, onClick = noop }) => {\n\treturn(\n\t\t<NavItem active={active} onClick={onClick} columns=\"4fr 1fr 2fr\">\n\t\t\t<Cell></Cell>\n\t\t\t<NavText col=\"2\">\n\t\t\t\t{icon && <Icon icon={icon} />}\n\t\t\t</NavText>\n\t\t\t<NavText col=\"3\">\n\t\t\t\t{navOpen && <span>{text}</span>}\n\t\t\t</NavText>\n\t\t</NavItem>\n\t)\n}\n\nexport default ({\n\tactiveRoute,\n\tallRoutes,\n\ttoggleNavWidth = noop,\n\tnavOpen = true,\n\twidth,\n}) => {\n\tconst dispatch = useDispatch();\n\tconst [ tooltip, setTooltip ] = React.useState({\n\t\tshow: false,\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\tconst showTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tshow: true,\n\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\ty: evt.target.getBoundingClientRect().top\n\t\t});\n\t};\n\n\tconst hideTooltip = () => {\n\t\tsetTooltip({\n\t\t\t...tooltip,\n\t\t\tshow: false\n\t\t});\n\t};\n\n\t//Prevents tooltip from lingering when position of trigger element changes\n\tReact.useEffect(() => {\n\t\tconst hideTooltip = () => {\n\t\t\tsetTooltip({\n\t\t\t\tshow: false\n\t\t\t});\n\t\t};\n\n\t\thideTooltip();\n\t}, [navOpen]);\n\n\treturn (\n\t\t<Nav\n\t\t\tcolumns=\"1fr\"\n\t\t\trows=\"60px 2em 2em 2em 2em\"\n\t\t\twidth={width}\n\t\t>\n\t\t\t<Tooltip\n\t\t\t\tshow={tooltip.show} \n\t\t\t\tx={tooltip.x} \n\t\t\t\ty={tooltip.y} \n\t\t\t\ttext={navOpen ? \"Collapse\" : \"Expand\"} \n\t\t\t/>\n\t\t\t<HeaderCell\n\t\t\t\tonClick={toggleNavWidth}\n\t\t\t>\n\t\t\t\t<Header navOpen={navOpen} width={width}>\n\t\t\t\t\t<Icon \n\t\t\t\t\t\ticon=\"umbrella\" \n\t\t\t\t\t\tclassName=\"logo-icon\"\n\t\t\t\t\t/>\n\t\t\t\t\t{navOpen && \n\t\t\t\t\t\t<Logo/>\n\t\t\t\t\t}\n\t\t\t\t\t{navOpen && \n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonMouseOver={(evt) => {\n\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\tshowTooltip(evt);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseOut={hideTooltip}\n\t\t\t\t\t\t>{\"<\"}</span>\n\t\t\t\t\t}\n\t\t\t\t\t{!navOpen &&\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonMouseOver={(evt) => {\n\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\tshowTooltip(evt);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseOut={hideTooltip}\n\t\t\t\t\t\t>{\">\"}</span>\n\t\t\t\t\t}\n\t\t\t\t</Header>\n\t\t\t</HeaderCell>\n\t\t\t<Cell row=\"2\">\n\t\t\t\t<NavEntry \n\t\t\t\t\tactive={activeRoute === allRoutes.home}\n\t\t\t\t\tonClick={() => dispatch(updateRoute(allRoutes.home))}\n\t\t\t\t\tnavOpen={navOpen}\n\t\t\t\t\ttext=\"Home\"\n\t\t\t\t\ticon=\"home\"\n\t\t\t\t/>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"3\">\n\t\t\t\t<NavEntry\n\t\t\t\t\tactive={activeRoute === \"help\"}\n\t\t\t\t\tonClick={() => dispatch(updateRoute(\"help\"))}\n\t\t\t\t\tnavOpen={navOpen}\n\t\t\t\t\ttext=\"Help\"\n\t\t\t\t\ticon=\"question-circle\"\n\t\t\t\t/>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"4\">\n\t\t\t\t<NavEntry\n\t\t\t\t\tactive={activeRoute === allRoutes.about} \n\t\t\t\t\tonClick={() => dispatch(updateRoute(allRoutes.about))}\n\t\t\t\t\tnavOpen={navOpen}\n\t\t\t\t\ttext=\"About\"\n\t\t\t\t\ticon=\"info-circle\"\n\t\t\t\t/>\n\t\t\t</Cell>\n\t\t</Nav>\n\t);\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"../layout/grid-items\";\n\nconst InputContainer = styled(Grid)`\n\tgrid-gap: 0;\n\twidth: 100%;\n\theight: 100%;\n`;\n\nconst SearchBar = styled.input.attrs({ type: \"text\" })`\n\tposition: relative;\n\ttop: 50%;\n\ttransform: translateY(-60%);\n\tbackground-color: rgba(255, 255, 255, 0.1);\n\tborder: 2px solid rgba(255, 255, 255, 0.7);\n\tborder-right: none;\n\tborder-radius: 18px 0px 0px 18px;\n\tpadding: 0.25em;\n\tpadding-left: 1em;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\theight: 21px;\n\tcolor: rgb(255, 255, 255);\n`;\n\nconst SearchButton = styled.div`\n\tborder: 2px solid rgba(255, 255, 255, 0.7);\n\tborder-radius: 0px 18px 18px 0px;\n\tposition: relative;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\theight: 20px;\n\tpadding: 0.25em;\n\tpadding-right: .5em;\n\tbackground-color: rgba(255, 255, 255, 0.1);\n\tcursor: pointer;\n\n\t.search-icon {\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\tposition: relative;\n\t}\n`;\n\nexport default ({\n\tonSubmit,\n\tsearchRef,\n}) => {\n\tconst [ text, setText ] = React.useState(\"\");\n\n\tconst handleInput = (evt) => {\n\t\tsetText(evt.target.value);\n\t}\n\n\tconst handleKeyUp = ({ key }) => {\n\t\tif (key === \"Enter\") {\n\t\t\tif (text.length !== 0) {\n\t\t\t\tonSubmit(text);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn(\n\t\t<InputContainer columns=\"6fr 1fr\">\n\t\t\t<Cell>\n\t\t\t\t<SearchBar\n\t\t\t\t\tplaceholder=\"New York, New York\"\n\t\t\t\t\tonInput={handleInput}\n\t\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\t\tonSubmit={() => onSubmit(text)}\n\t\t\t\t\tref={searchRef}\n\t\t\t\t/>\n\t\t\t</Cell>\n\t\t\t<Cell col=\"2\">\n\t\t\t\t<SearchButton>\n\t\t\t\t\t<Icon icon=\"search\" className=\"search-icon\" onClick={() => onSubmit(text)} />\n\t\t\t\t</SearchButton>\n\t\t\t</Cell>\n\t\t</InputContainer>\n\t)\n}","import { \n\tfindIndex, \n\tconcat, \n\tdifferenceWith, \n\tintersectionWith, \n\tisEqual, \n\tisEmpty, \n\tpullAllWith,\n} from \"lodash\";\n\n/**\n * Merges two lists of WeatherItems, ensuring no duplicate entries are added\n * @param {[]} oldList\n * @param {[]} newList\n * @param {boolean} omitFavorites - prevents merging of favorites, used when merging newly-fetched data into existing store\n */\nexport const mergeLists = (oldList, newList, omitFavorites = false) => {\n\t//Copy input arrays\n\tconst oldCopy = oldList.slice();\n\tconst newCopy = newList.slice();\n\n\t//Begin by extracting exactly matching values and adding to the output array\n\tconst output = intersectionWith(oldCopy, newCopy, isEqual);\n\n\t//Pull distinct values from both arrays\n\tconst oldDifference = differenceWith(oldCopy, newCopy, isEqual);\n\tconst newDifference = differenceWith(newCopy, oldCopy, isEqual);\n\n\t//Store the names of any cities with updated entries\n\tconst copiedCities = [];\n\n\t//Compare the resulting arrays\n\tif (!isEmpty(oldDifference)) {\n\t\toldDifference.forEach((entry) => {\n\t\t\tconst idx = findIndex(newDifference, (o) => {\n\t\t\t\treturn o.city.localeCompare(entry.city) === 0;\n\t\t\t});\n\n\t\t\t//If a matching index is not found, push the entry without changes\n\t\t\tif (idx === -1) {\n\t\t\t\toutput.push({...entry});\n\t\t\t} else {\n\t\t\t\t//Else copy all relevant values to new object...\n\t\t\t\tconst updatedEntry = { ...entry };\n\t\t\t\tupdatedEntry.city = newList[idx].city;\n\t\t\t\tupdatedEntry.country = newList[idx].country;\n\t\t\t\t//...omitting favorited field if appropriate\n\t\t\t\tupdatedEntry.favorited = omitFavorites ? entry.favorited : newList[idx].favorited;\n\t\t\t\tupdatedEntry.observationTime = newList[idx].observationTime;\n\t\t\t\tupdatedEntry.temperature = newList[idx].temperature;\n\t\t\t\tupdatedEntry.scale = newList[idx].scale;\n\t\t\t\tupdatedEntry.descriptions = newList[idx].descriptions;\n\t\t\t\tupdatedEntry.windDirection = newList[idx].windDirection;\n\t\t\t\tupdatedEntry.windSpeed = newList[idx].windSpeed;\n\t\t\t\tupdatedEntry.pressure = newList[idx].pressure;\n\t\t\t\tupdatedEntry.rain = newList[idx].rain;\n\t\t\t\tupdatedEntry.snow = newList[idx].snow;\n\t\t\t\tupdatedEntry.humidity = newList[idx].humidity;\n\t\t\t\tupdatedEntry.cloudCover = newList[idx].cloudCover;\n\t\t\t\tupdatedEntry.feelsLike = newList[idx].feelsLike;\n\t\t\t\tupdatedEntry.visibility = newList[idx].visibility;\n\n\t\t\t\t//Add the updated entry to the output array\n\t\t\t\toutput.push(updatedEntry);\n\t\t\t\t//Store the city name for faster checking against remaining values in new list\n\t\t\t\tcopiedCities.push(entry.city);\n\t\t\t}\n\t\t});\n\t}\n\n\t//Remove any cities already in output array\n\tpullAllWith(newDifference, copiedCities, (a, b) => { return isEqual(a.city, b); });\n\tconst concatenated = concat(output, newDifference);\n\n\treturn concatenated;\n}\n\n/**\n * Takes a list of WeatherItems and sorts that list alphabetically by city name\n * @param {[]} list \n */\nexport const sortLocaleList = (list) => {\n\treturn sortListByCity(list, 0, list.length - 1);\n}\n\n/**\n * Takes a list of WeatherItems and extracts only those found in a list of ids.\n * @param {[]} weatherItemList\n * @param {String} idList \n */\nexport const generateListById = (weatherItemList, idList) => {\n\t//If weatherItemList is not an array or is an object without an id field, throw error\n\tif (!isArray(weatherItemList) && weatherItemList.id === undefined) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\t//If only one entry and it exists in the list, return that entry\n\tif (!isArray(weatherItemList) || weatherItemList.length === 1) {\n\t\tif (weatherItemList.id !== undefined && idList.includes(weatherItemList.id)) {\n\t\t\treturn [weatherItemList];\n\t\t}\n\t}\n\n\treturn intersectionWith(weatherItemList, idList, (a, b) => isEqual(a.id, b));\n}\n\n/**\n * Reorders a list of weatherItems to place all favourites at the front, still in alphabetical order.\n * @param {[]} list \n */\nexport const reorderByFavorite = (list) => {\n\tconst sorted = sortListByCity(list, 0, list.length - 1);\n\n\tconst fav = [];\n\tconst normal = [];\n\n\tsorted.forEach((item) => {\n\t\tif (item.favorited) {\n\t\t\tfav.push(item);\n\t\t} else {\n\t\t\tnormal.push(item);\n\t\t}\n\t});\n\n\treturn concat(fav, normal);\n}\n\n/**\n * Takes a list of weatherItems and removes the entry with the provided id, if it exists.\n * @param {[]} list \n * @param {String} id \n */\nexport const removeById = (list, id) => {\n\tif(!isArray(list)) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\tconst copy = list.slice();\n\n\tpullAllWith(copy, id, (a, b) => a.id.localeCompare(b) === 0);\n\n\treturn copy;\n}\n\n/**\n * Selects the weatherItem associated with a given id\n * @param {[]} list \n * @param {String} id \n */\nexport const getLocaleById = (list, id) => {\n\tif(!isArray(list)) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (list[i].id.localeCompare(id) === 0) {\n\t\t\treturn list[i];\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Selects a weatherItem associated with a given city name\n * @param {[]} list \n * @param {String} city \n */\nexport const getLocaleByCity = (list, city) => {\n\tif (!isArray(list)) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (list[i].city.localeCompare(city) === 0) {\n\t\t\treturn list[i];\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n///////////// HELPER FUNCTIONS ////////////\n\n/**\n * Selects a pivot at the rough halfway point of a list and partitions that list,\n * plus swaps relevant elements to sort.\n * @param {[]} list - A list of WeatherItems (see /src/app/weather-item.js). \n * @param {integer} left - The currently-selected left index\n * @param {integer} right - The currently-selected right index\n */\nconst partition = (list, left, right) => {\n\tif (!list || !list.length) {\n\t\tthrow TypeError(\"Array parameter must not be empty or undefined.\");\n\t}\n\n\tlet pivot = list[Math.floor((right + left) / 2)];\n\tlet i = left;\n\tlet j = right;\n\n\twhile (i <= j) {\n\t\twhile (list[i].city.localeCompare(pivot.city) < 0) {\n\t\t\ti++;\n\t\t}\n\t\twhile (list[j].city.localeCompare(pivot.city) > 0) {\n\t\t\tj--;\n\t\t}\n\n\t\tif (i <= j) {\n\t\t\tswap(list, i, j);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\n\treturn i;\n}\n\n/**\n * Swaps two elements in a list\n * @param {[]} items - A list of items \n * @param {integer} left - The index of the first element \n * @param {integer} right - The index of the second element\n */\nconst swap = (items, left, right) => {\n\tlet temp = items[left];\n\titems[left] = items[right];\n\titems[right] = temp;\n}\n\n/**\n * Quicksort list by the name of the city, returns\n * the list in increasing alphabetical order.\n * @param {[]} items - A list of WeatherItems (see /src/app/weather-item.js) -- either the full list or a subset\n * @param {integer} left - The starting leftmost index\n * @param {integer} right - The starting rightmost index\n */\nconst sortListByCity = (items, left, right) => {\n\tif (!items || !items.length) {\n\t\t//Safety error check in case I've beefed something\n\t\tthrow TypeError(\"Array parameter must not be empty or undefined.\");\n\t}\n\n\tlet idx = undefined;\n\n\tif (items.length > 1) {\n\t\tidx = partition(items, left, right);\n\n\t\t//If there are more elements on the left,\n\t\tif (left < idx - 1) {\n\t\t\t//Select that segment\n\t\t\tsortListByCity(items, left, idx - 1);\n\t\t}\n\n\t\t//Otherwise if there are more elements on the right,\n\t\tif (idx < right) {\n\t\t\t//Use that segment\n\t\t\tsortListByCity(items, idx, right);\n\t\t}\n\t}\n\n\t//If only one item is in the list, return the list as-is\n\treturn items;\n}\n\nconst { isArray } = Array;","import { createSlice } from \"@reduxjs/toolkit\";\nimport { findIndex } from \"lodash\";\nimport { mergeLists, sortLocaleList, getLocaleById , getLocaleByCity } from \"../app/locale-list-tools\";\n\nexport const localesSlice = createSlice({\n\tname: \"locales\",\n\tinitialState: {\n\t\tlocales: []\n\t},\n\treducers: {\n\t\t//Overwrite the list of locales\n\t\tsetLocales: (state, {payload}) => {\n\t\t\tconst sorted = payload.length ? sortLocaleList(payload) : payload;\n\t\t\tstate.locales = sorted;\n\t\t},\n\t\t//Merge a list of locales with the extant list\n\t\tmergeLocales: (state, {payload}) => {\n\t\t\tconst allLocales = [...state.locales];\n\t\t\tif (allLocales.length === 0) {\n\t\t\t\tstate.locales = [payload];\n\t\t\t} else {\n\t\t\t\tconst merged = mergeLists(allLocales, payload, true);\n\t\t\t\tconst sorted = sortLocaleList(merged);\n\t\t\t\tstate.locales = sorted;\n\t\t\t}\n\t\t},\n\t\t//Set favorite\n\t\tsetFavorite: (state, {payload}) => {\n\t\t\tconst allLocales = [...state.locales];\n\n\t\t\t//Find the index of the locale in question\n\t\t\tconst idx = findIndex(allLocales, (item) => item.id === payload.id);\n\t\t\t\n\t\t\tif (idx !== -1) {\n\t\t\t\tconst item = {...allLocales[idx]};\n\t\t\t\titem.favorited = payload.favorite;\n\n\t\t\t\tconst merged = mergeLists(allLocales, [item]);\n\t\t\t\tconst sorted = sortLocaleList(merged);\n\n\t\t\t\tstate.locales = sorted;\n\t\t\t}\n\t\t},\n\t\t//Delete by id\n\t\tdeleteById: (state, {payload}) => {\n\t\t\tconst allLocales = [...state.locales];\n\n\t\t\t//Find the index of the locale in question\n\t\t\tconst idx = findIndex(allLocales, (item) => item.id === payload);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tconst newList = allLocales.filter((_item, i) => i !== idx);\n\t\t\t\tstate.locales = newList;\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport const { setLocales, mergeLocales, setFavorite, deleteById } = localesSlice.actions;\n\nexport const selectLocales = state => state.locales;\nexport const selectLocaleById = (state, id) => getLocaleById(state.locales.locales, id);\nexport const selectLocaleByCity = (state, city) => getLocaleByCity(state.locales.locales, city);\n\nexport default localesSlice.reducer;","/**\n * Used to define the scale for requests for the weatherstack API. Requests may return values in:\n *   - Metric units:\n * \t\t- Celsius (temperature)\n * \t\t- km/h (wind speed)\n * \t\t- km (visibility)\n * \t\t- mm (precip)\n * \t\t- cm (total snow)\n * \t\t- mb (pressure)\n * \n * \t- Fahrenheit + Imperial units:\n * \t\t- Fahrenheit (temperature)\n * \t\t- mph (wind speed)\n * \t\t- m (visibility)\n * \t\t- in (precip + total snow)\n * \t\t- mb (pressure)\n * \n * \t- Scientific units:\n * \t\t- Kelvin (temperature)\n * \t\t- hm/h (wind speed)\n * \t\t- km (visibility)\n * \t\t- mm (precip)\n * \t\t- cm (total snow)\n * \t\t- mb (pressure)\n */\nexport const METRIC_SCALE = \"metric\";\nexport const FAHRENHEIT_SCALE = \"imperial\";\nexport const SCIENTIFIC_SCALE = \"standard\";\n\nexport const METRIC_UNITS = {\n\ttemperature: \"°C\",\n\twindSpeed: \"m/sec\",\n\tvisibility: \"meters\",\n\tprecip: \"mm\",\n\ttotalSnow: \"mm\",\n\tpressure: \"hPa\",\n};\n\nexport const FAHRENHEIT_UNITS = {\n\ttemperature: \"°F\",\n\twindSpeed: \"mph\",\n\tvisibility: \"meters\",\n\tprecip: \"mm\",\n\ttotalSnow: \"mm\",\n\tpressure: \"hPa\",\n};\n\nexport const SCIENTIFIC_UNITS = {\n\ttemperature: \"°K\",\n\twindSpeed: \"m/sec\",\n\tvisibility: \"meters\",\n\tprecip: \"mm\",\n\ttotalSnow: \"mm\",\n\tpressure: \"hPa\",\n};\n\nexport const COUNTRY_CODES = {\n\t'AF': 'Afghanistan',\n\t'AX': 'Aland Islands',\n\t'AL': 'Albania',\n\t'DZ': 'Algeria',\n\t'AS': 'American Samoa',\n\t'AD': 'Andorra',\n\t'AO': 'Angola',\n\t'AI': 'Anguilla',\n\t'AQ': 'Antarctica',\n\t'AG': 'Antigua And Barbuda',\n\t'AR': 'Argentina',\n\t'AM': 'Armenia',\n\t'AW': 'Aruba',\n\t'AU': 'Australia',\n\t'AT': 'Austria',\n\t'AZ': 'Azerbaijan',\n\t'BS': 'Bahamas',\n\t'BH': 'Bahrain',\n\t'BD': 'Bangladesh',\n\t'BB': 'Barbados',\n\t'BY': 'Belarus',\n\t'BE': 'Belgium',\n\t'BZ': 'Belize',\n\t'BJ': 'Benin',\n\t'BM': 'Bermuda',\n\t'BT': 'Bhutan',\n\t'BO': 'Bolivia',\n\t'BA': 'Bosnia And Herzegovina',\n\t'BW': 'Botswana',\n\t'BV': 'Bouvet Island',\n\t'BR': 'Brazil',\n\t'IO': 'British Indian Ocean Territory',\n\t'BN': 'Brunei Darussalam',\n\t'BG': 'Bulgaria',\n\t'BF': 'Burkina Faso',\n\t'BI': 'Burundi',\n\t'KH': 'Cambodia',\n\t'CM': 'Cameroon',\n\t'CA': 'Canada',\n\t'CV': 'Cape Verde',\n\t'KY': 'Cayman Islands',\n\t'CF': 'Central African Republic',\n\t'TD': 'Chad',\n\t'CL': 'Chile',\n\t'CN': 'China',\n\t'CX': 'Christmas Island',\n\t'CC': 'Cocos (Keeling) Islands',\n\t'CO': 'Colombia',\n\t'KM': 'Comoros',\n\t'CG': 'Congo',\n\t'CD': 'Congo, Democratic Republic',\n\t'CK': 'Cook Islands',\n\t'CR': 'Costa Rica',\n\t'CI': 'Cote D\\'Ivoire',\n\t'HR': 'Croatia',\n\t'CU': 'Cuba',\n\t'CY': 'Cyprus',\n\t'CZ': 'Czech Republic',\n\t'DK': 'Denmark',\n\t'DJ': 'Djibouti',\n\t'DM': 'Dominica',\n\t'DO': 'Dominican Republic',\n\t'EC': 'Ecuador',\n\t'EG': 'Egypt',\n\t'SV': 'El Salvador',\n\t'GQ': 'Equatorial Guinea',\n\t'ER': 'Eritrea',\n\t'EE': 'Estonia',\n\t'ET': 'Ethiopia',\n\t'FK': 'Falkland Islands (Malvinas)',\n\t'FO': 'Faroe Islands',\n\t'FJ': 'Fiji',\n\t'FI': 'Finland',\n\t'FR': 'France',\n\t'GF': 'French Guiana',\n\t'PF': 'French Polynesia',\n\t'TF': 'French Southern Territories',\n\t'GA': 'Gabon',\n\t'GM': 'Gambia',\n\t'GE': 'Georgia',\n\t'DE': 'Germany',\n\t'GH': 'Ghana',\n\t'GI': 'Gibraltar',\n\t'GR': 'Greece',\n\t'GL': 'Greenland',\n\t'GD': 'Grenada',\n\t'GP': 'Guadeloupe',\n\t'GU': 'Guam',\n\t'GT': 'Guatemala',\n\t'GG': 'Guernsey',\n\t'GN': 'Guinea',\n\t'GW': 'Guinea-Bissau',\n\t'GY': 'Guyana',\n\t'HT': 'Haiti',\n\t'HM': 'Heard Island & Mcdonald Islands',\n\t'VA': 'Holy See (Vatican City State)',\n\t'HN': 'Honduras',\n\t'HK': 'Hong Kong',\n\t'HU': 'Hungary',\n\t'IS': 'Iceland',\n\t'IN': 'India',\n\t'ID': 'Indonesia',\n\t'IR': 'Iran, Islamic Republic Of',\n\t'IQ': 'Iraq',\n\t'IE': 'Ireland',\n\t'IM': 'Isle Of Man',\n\t'IL': 'Israel',\n\t'IT': 'Italy',\n\t'JM': 'Jamaica',\n\t'JP': 'Japan',\n\t'JE': 'Jersey',\n\t'JO': 'Jordan',\n\t'KZ': 'Kazakhstan',\n\t'KE': 'Kenya',\n\t'KI': 'Kiribati',\n\t'KR': 'Korea',\n\t'KW': 'Kuwait',\n\t'KG': 'Kyrgyzstan',\n\t'LA': 'Lao People\\'s Democratic Republic',\n\t'LV': 'Latvia',\n\t'LB': 'Lebanon',\n\t'LS': 'Lesotho',\n\t'LR': 'Liberia',\n\t'LY': 'Libyan Arab Jamahiriya',\n\t'LI': 'Liechtenstein',\n\t'LT': 'Lithuania',\n\t'LU': 'Luxembourg',\n\t'MO': 'Macao',\n\t'MK': 'Macedonia',\n\t'MG': 'Madagascar',\n\t'MW': 'Malawi',\n\t'MY': 'Malaysia',\n\t'MV': 'Maldives',\n\t'ML': 'Mali',\n\t'MT': 'Malta',\n\t'MH': 'Marshall Islands',\n\t'MQ': 'Martinique',\n\t'MR': 'Mauritania',\n\t'MU': 'Mauritius',\n\t'YT': 'Mayotte',\n\t'MX': 'Mexico',\n\t'FM': 'Micronesia, Federated States Of',\n\t'MD': 'Moldova',\n\t'MC': 'Monaco',\n\t'MN': 'Mongolia',\n\t'ME': 'Montenegro',\n\t'MS': 'Montserrat',\n\t'MA': 'Morocco',\n\t'MZ': 'Mozambique',\n\t'MM': 'Myanmar',\n\t'NA': 'Namibia',\n\t'NR': 'Nauru',\n\t'NP': 'Nepal',\n\t'NL': 'Netherlands',\n\t'AN': 'Netherlands Antilles',\n\t'NC': 'New Caledonia',\n\t'NZ': 'New Zealand',\n\t'NI': 'Nicaragua',\n\t'NE': 'Niger',\n\t'NG': 'Nigeria',\n\t'NU': 'Niue',\n\t'NF': 'Norfolk Island',\n\t'MP': 'Northern Mariana Islands',\n\t'NO': 'Norway',\n\t'OM': 'Oman',\n\t'PK': 'Pakistan',\n\t'PW': 'Palau',\n\t'PS': 'Palestinian Territory, Occupied',\n\t'PA': 'Panama',\n\t'PG': 'Papua New Guinea',\n\t'PY': 'Paraguay',\n\t'PE': 'Peru',\n\t'PH': 'Philippines',\n\t'PN': 'Pitcairn',\n\t'PL': 'Poland',\n\t'PT': 'Portugal',\n\t'PR': 'Puerto Rico',\n\t'QA': 'Qatar',\n\t'RE': 'Reunion',\n\t'RO': 'Romania',\n\t'RU': 'Russian Federation',\n\t'RW': 'Rwanda',\n\t'BL': 'Saint Barthelemy',\n\t'SH': 'Saint Helena',\n\t'KN': 'Saint Kitts And Nevis',\n\t'LC': 'Saint Lucia',\n\t'MF': 'Saint Martin',\n\t'PM': 'Saint Pierre And Miquelon',\n\t'VC': 'Saint Vincent And Grenadines',\n\t'WS': 'Samoa',\n\t'SM': 'San Marino',\n\t'ST': 'Sao Tome And Principe',\n\t'SA': 'Saudi Arabia',\n\t'SN': 'Senegal',\n\t'RS': 'Serbia',\n\t'SC': 'Seychelles',\n\t'SL': 'Sierra Leone',\n\t'SG': 'Singapore',\n\t'SK': 'Slovakia',\n\t'SI': 'Slovenia',\n\t'SB': 'Solomon Islands',\n\t'SO': 'Somalia',\n\t'ZA': 'South Africa',\n\t'GS': 'South Georgia And Sandwich Isl.',\n\t'ES': 'Spain',\n\t'LK': 'Sri Lanka',\n\t'SD': 'Sudan',\n\t'SR': 'Suriname',\n\t'SJ': 'Svalbard And Jan Mayen',\n\t'SZ': 'Swaziland',\n\t'SE': 'Sweden',\n\t'CH': 'Switzerland',\n\t'SY': 'Syrian Arab Republic',\n\t'TW': 'Taiwan',\n\t'TJ': 'Tajikistan',\n\t'TZ': 'Tanzania',\n\t'TH': 'Thailand',\n\t'TL': 'Timor-Leste',\n\t'TG': 'Togo',\n\t'TK': 'Tokelau',\n\t'TO': 'Tonga',\n\t'TT': 'Trinidad And Tobago',\n\t'TN': 'Tunisia',\n\t'TR': 'Turkey',\n\t'TM': 'Turkmenistan',\n\t'TC': 'Turks And Caicos Islands',\n\t'TV': 'Tuvalu',\n\t'UG': 'Uganda',\n\t'UA': 'Ukraine',\n\t'AE': 'United Arab Emirates',\n\t'GB': 'United Kingdom',\n\t'US': 'United States',\n\t'UM': 'United States Outlying Islands',\n\t'UY': 'Uruguay',\n\t'UZ': 'Uzbekistan',\n\t'VU': 'Vanuatu',\n\t'VE': 'Venezuela',\n\t'VN': 'Viet Nam',\n\t'VG': 'Virgin Islands, British',\n\t'VI': 'Virgin Islands, U.S.',\n\t'WF': 'Wallis And Futuna',\n\t'EH': 'Western Sahara',\n\t'YE': 'Yemen',\n\t'ZM': 'Zambia',\n\t'ZW': 'Zimbabwe'\n}\n\nexport const STATE_CODES = {\n\t'Alabama': 'AL',\n\t'Alaska': 'AK',\n\t'Arizona': 'AZ',\n\t'Arkansas': 'AR',\n\t'California': 'CA',\n\t'Colorado': 'CO',\n\t'Connecticut': 'CT',\n\t'Delaware': 'DE',\n\t'District of Columbia': 'DC',\n\t'Washington DC': 'DC',\n\t'Florida': 'FL',\n\t'Georgia': 'GA',\n\t'Hawaii': 'HI',\n\t'Idaho': 'ID',\n\t'Illinois': 'IL',\n\t'Indiana': 'IN',\n\t'Iowa': 'IA',\n\t'Kansas': 'KS',\n\t'Kentucky': 'KY',\n\t'Louisiana': 'LA',\n\t'Maine': 'ME',\n\t'Maryland': 'MD',\n\t'Massachusetts': 'MA',\n\t'Michigan': 'MI',\n\t'Minnesota': 'MN',\n\t'Mississippi': 'MS',\n\t'Missouri': 'MS',\n\t'Montana': 'MT',\n\t'Nebraska': 'NE',\n\t'Nevada': 'NV',\n\t'New Hampshire': 'NH',\n\t'New Jersey': 'NJ',\n\t'New Mexico': 'NM',\n\t'New York': 'NY',\n\t'North Carolina': 'NC',\n\t'North Dakota': 'ND',\n\t'Ohio': 'OH',\n\t'Oklahoma': 'OK',\n\t'Oregon': 'OR',\n\t'Pennsylvania': 'PA',\n\t'Rhode Island': 'RI',\n\t'South Carolina': 'SC',\n\t'Tennessee': 'TN',\n\t'Texas': 'TX',\n\t'Utah': 'UT',\n\t'Vermont': 'VT',\n\t'Washington': 'WA',\n\t'West Virginia': 'WV',\n\t'Wiconsin': 'WI',\n\t'Wyoming': 'WY'\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as CONSTANTS from \"../app/constants\";\n\nexport const appSettingsSlice = createSlice({\n\tname: \"settings\",\n\tinitialState: {\n\t\tunits: CONSTANTS.METRIC_SCALE,\n\t\tfirstVisit: true,\n\t\tnavOpen: true,\n\t},\n\treducers: {\n\t\tsetUnits: (state, {payload}) => {\n\t\t\tstate.units = payload;\n\t\t},\n\t\tsetFirstVisit: (state, {payload}) => {\n\t\t\tstate.firstVisit = payload;\n\t\t},\n\t\tsetNavOpen: (state, {payload}) => {\n\t\t\tstate.navOpen = payload;\n\t\t}\n\t}\n});\n\nexport const { setUnits, setFirstVisit, setNavOpen } = appSettingsSlice.actions;\nexport const selectUnits = state => state.settings.units;\nexport const selectFirstVisit = state => state.settings.firstVisit;\nexport const selectNavOpen = state => state.settings.navOpen;\n\nexport default appSettingsSlice.reducer;","import { uniqueId } from \"lodash\";\nimport { getWeatherItem } from \"./weather-item\";\nimport { DateTime } from \"luxon\";\n\nexport const parseResults = (results, unit) => {\n\tif (results === undefined) {\n\t\treturn undefined;\n\t}\n\n\tif (results.status !== 200) {\n\t\treturn results;\n\t}\n\t\n\tconst timezone = results.timezone / 60;\n\tconst time = DateTime.fromSeconds(results.dt).toUTC(timezone);\n\tconst hoursMinutesIsolated = time.toString().split(\"T\")[1].split(\":\");\n\tconst offset = /\\+/.test(hoursMinutesIsolated[2]) ? `+${hoursMinutesIsolated[2].split(\"+\")[1]}:${hoursMinutesIsolated[3]}` : `-${hoursMinutesIsolated[2].split(\"-\")[1]}:${hoursMinutesIsolated[3]}`;\n\tconst dateString = `${hoursMinutesIsolated[0]}:${hoursMinutesIsolated[1]} GMT ${offset}`;\n\n\treturn getWeatherItem(\n\t\tuniqueId(`${results.name}.`),\n\t\tfalse,\n\t\tresults.name,\n\t\tresults.sys.country,\n\t\tdateString,\n\t\tMath.round(results.main.temp),\n\t\tunit,\n\t\t[results.weather[0].main],\n\t\tresults.wind.speed,\n\t\tresults.wind.deg,\n\t\tresults.main.pressure,\n\t\tresults.rain,\n\t\tresults.snow,\n\t\tresults.main.humidity,\n\t\tresults.clouds.all,\n\t\tMath.round(results.main.feels_like),\n\t\tresults.visibility\n\t);\n}","/**\n * WeatherItem is used to manage and display the relevant information returned from a\n * request to the weatherstack API.\n * \n * It stores:\n *  - the basic metadata associated with the weather snapshot - relevant location and local time information\n * \t- a CurrentWeatherItem storing more detailed information about the weather\n * A WeatherItem consists of some or all of the following parameters:\n * @param {String} id - An unique identifier\n * @param {boolean} favorited - Whether or not the given locale should be stored as a favorite\n * @param {String} city - The city associated with the request\n * @param {String} country - The country associated with the request\n * @param {String} observationtime - The time of the latest observation\n * @param {String} temperature - The temperature at time of latest observation\n * @param {String} scale - The scale used for the temperature and precipitation measurements\n * @param {String[]} descriptions - An array of descriptions associated with the current weather status\n * @param {String} windSpeed - The windspeed at time of observation\n * @param {String} windDirection - The wind direction at time of observation\n * @param {String} pressure - The pressure at time of observation\n * @param {String} rain - The amount of precipitation at time of observation, in units defined by the scale parameter\n * @param {String} snow - The amount of snow at time of observation, in units defined by the scale parameter\n * @param {String} humidity - The humidity at time of observation, in percentage\n * @param {String} cloudCover - Cloud cover at time of observation, in percentage\n * @param {String} feelsLike - The perceived temperature at time of observation, in selected scale\n * @param {String} visibility - The visibility distance at time of observation, in selected scale\n */\nconst getWeatherItem = (\n\tid,\n\tfavorited,\n\tcity,\n\tcountry,\n\tobservationTime,\n\ttemperature,\n\tscale,\n\tdescriptions,\n\twindSpeed,\n\twindDirection,\n\tpressure,\n\train,\n\tsnow,\n\thumidity,\n\tcloudCover,\n\tfeelsLike,\n\tvisibility,\n) => ({\n\tid,\n\tfavorited,\n\tcity,\n\tcountry,\n\tobservationTime,\n\ttemperature,\n\tscale,\n\tdescriptions,\n\twindSpeed,\n\twindDirection,\n\tpressure,\n\train,\n\tsnow,\n\thumidity,\n\tcloudCover,\n\tfeelsLike,\n\tvisibility,\n});\n\nexport { getWeatherItem };","import axios from \"axios\";\nimport { FAHRENHEIT_SCALE, METRIC_SCALE, SCIENTIFIC_SCALE } from \"./constants\";\n\n/**\n * Fetches current weather information for the given locale in the given scale\n * @param {String} locale - May be a city name, UK/Canada/US ZIP code, or latitude and longitude coordinates.\n * @param {String} scale - The requested scale\n */\nexport const fetchWeather = (locale, scale = METRIC_SCALE) => {\n\t//Validate inputs - locale must be defined\n\tif (!locale) {\n\t\tthrow TypeError(\"Locale cannot be undefined or null.\");\n\t}\n\n\t//Scale must be within three acceptable values defined in constants.js\n\tif (!scaleIsValid(scale)) {\n\t\tthrow TypeError(\"fetch-weather-for-locale: Invalid scale parameter passed.\");\n\t}\n\n\t//Make request, extract data from promise and return\n\treturn axiosRequest(locale, scale).then(data => data).catch((err) => console.log(err));\n}\n\n/**\n * Retrieves weather based on coordinates.\n * @param {String} lat \n * @param {String} lon \n * @param {String} scale \n */\nexport const getWeatherByCoordinates = (lat, lon, scale = METRIC_SCALE) => {\n\tif (!scaleIsValid(scale)) {\n\t\tthrow TypeError(\"fetch-weather-for-locale: Invalid scale parameter passed.\")\n\t}\n\n\treturn axiosByCoords(lat, lon, scale).then(data => data).catch(err => console.log(err));\n}\n\n/**\n * Fetches current weather information for a list of locales.\n * @param {[]} localeList \n * @param {String} scale \n */\nexport const fetchList = (localeList, scale = METRIC_SCALE) => {\n\tif (!localeList) {\n\t\tthrow TypeError(\"List of locales cannot be undefined or null.\");\n\t}\n\n\tif (!scaleIsValid(scale)) {\n\t\tthrow TypeError(\"Invalid scale parameter passed: must be 'm', 's', or 'f'.\");\n\t}\n\n\tconst list = [];\n\n\tlocaleList.forEach((locale) => {\n\t\tlist.push(axiosRequest(locale, scale));\n\t});\n\n\treturn Promise.all(list).then((vals) => vals).catch((err) => console.log(err));\n}\n\n/**\n * Used specifically to update an extant list of previously-generated locale items.\n * If city name search returns no result, a repeat search will be performed with coordinates.\n * @param {[]} locales \n * @param {String} scale \n */\nexport const fetchUpdates = (locales, scale = METRIC_SCALE) => {\n\tif (!locales) {\n\t\tthrow TypeError(\"List of locales cannot be undefined or null.\");\n\t}\n\n\tif (!scaleIsValid(scale)) {\n\t\tthrow TypeError(\"Invalid scale parameter passed: must be 'm', 's', or 'f'.\");\n\t}\n\n\tconst list = [];\n\n\tlocales.forEach((locale) => {\n\t\tlist.push(axiosRequest(`${locale.city},${locale.country}`, scale));\n\t});\n\n\treturn Promise.all(list).then((vals) => vals).catch((err) => console.log(err));\n}\n\n//Performs axios request\nconst axiosRequest = (locale, scale) => {\n\tconst params = {\n\t\tappid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n\t\tq: locale,\n\t\tunits: scale\n\t}\n\n\tconsole.log(\"requesting!\");\n\n\treturn axios.get(\n\t\t\"https://api.openweathermap.org/data/2.5/weather\", { params }\n\t).then(\n\t\t//Extract promise\n\t\t(res) => { return { ...res.data, status: res.status }; }\n\t).catch(err => {\n\t\t//Log the error\n\t\tconsole.log(err);\n\t});\n}\n\nconst axiosByCoords = (lat, lon, scale) => {\n\tconst params = {\n\t\tappid: process.env.REACT_APP_OPENWEATHER_API_KEY,\n\t\tunits: scale,\n\t\tlat,\n\t\tlon\n\t};\n\n\treturn axios.get(\n\t\t\"https://api.openweathermap.org/data/2.5/weather\", { params }\n\t).then(\n\t\t(res) => { return { ...res.data, status: res.status }; }\n\t).catch(err => {\n\t\tconsole.log(err);\n\t})\n}\n\nexport const scaleIsValid = (scale) => {\n\tlet valid = false;\n\n\tif (scale.localeCompare(METRIC_SCALE) === 0) {\n\t\tvalid = true;\n\t}\n\n\tif (scale.localeCompare(FAHRENHEIT_SCALE) === 0) {\n\t\tvalid = true;\n\t}\n\n\tif (scale.localeCompare(SCIENTIFIC_SCALE) === 0) {\n\t\tvalid = true;\n\t}\n\n\treturn valid;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { findKey, has, get } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Online, Offline } from \"react-detect-offline\";\nimport { Grid, Cell } from \"./grid-items\";\nimport SearchField from \"../components/search-field\";\nimport { updateRoute } from \"../state/router-slice\";\nimport { selectLocales, setLocales, mergeLocales } from \"../state/locales-slice\";\nimport { selectUnits, setUnits } from \"../state/app-settings-slice\";\nimport { parseResults } from \"../app/manage-query-results\";\nimport { fetchWeather, fetchUpdates } from \"../app/fetch-weather-for-locale\";\nimport { getLocaleByCity } from \"../app/locale-list-tools\";\nimport Tooltip from \"../components/tooltip\";\nimport * as CONSTANTS from \"../app/constants\";\n\nconst { isArray } = Array;\n\nconst Header = styled(Grid)`\n\twidth: 100%;\n\tpadding-left: 2em;\n\tbackground-color: #4A4E69;\n\tgrid-gap: 10px;\n\theight: 60px;\n`;\n\nconst HeaderCell = styled(Cell)`\n\tline-height: 60px;\n\tfont-size: 1em;\n`;\n\nconst ScaleButton = styled.div`\n\tposition: relative;\n\tright: -90%;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\n\ttext-align: center;\n\tfont-weight: 800;\n\tline-height: 40px;\n\topacity: 0.7;\n\tcursor: pointer;\n\tborder: 2px solid rgba(255, 255, 255, 0.7);\n\tborder-radius: 10px;\n\n\twidth: 40px;\n\theight: 40px;\n\tuser-select: none;\n\n\t:hover {\n\t\topacity: 1;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t}\n`;\n\n/**\n * Processes search strings.\n * Makes a few assumptions:\n * \t- That the first search term is a city/location name\n * \t- That any subsequent search terms are separated from the first by a comma.\n * \n * @param {String} val \n */\nconst processSearchTerms = (val) => {\n\tconst values = val.trim().split(\",\");\n\n\tlet searchString = \"\";\n\n\tif (isArray(values) && values.length > 1) {\n\t\tsearchString = values[0];\n\n\t\tvalues.forEach((value) => {\n\t\t\t//Check to see if the current value is a state or country for which a code is available\n\t\t\tconst current = findKey(CONSTANTS.COUNTRY_CODES, (item) => item.localeCompare(value.trim()) === 0) || get(CONSTANTS.STATE_CODES, value.trim());\n\n\t\t\tconst alreadyCode = has(CONSTANTS.COUNTRY_CODES, value.trim());\n\n\t\t\tif (current !== undefined) {\n\t\t\t\tsearchString = `${searchString},${current}`;\n\t\t\t} else if (alreadyCode) {\n\t\t\t\tsearchString = `${searchString},${value}`;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tsearchString = val;\n\t}\n\n\treturn searchString;\n}\n\nexport default () => {\n\tconst dispatch = useDispatch();\n\tconst allLocales = useSelector(selectLocales);\n\tconst searchRef = React.useRef();\n\tconst scale = useSelector(selectUnits);\n\n\tconst [ responseReceived, setResponseReceived ] = React.useState(false);\n\tconst [ city, setCity ] = React.useState(\"\");\n\tconst [ tooltip, setTooltip ] = React.useState({\n\t\tshow: false,\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\t//Once the new city has been added to the list, or upon receipt of an error, redirect\n\tReact.useEffect(() => {\n\t\tif (responseReceived) {\n\t\t\tlet newLocale = {};\n\n\t\t\ttry {\n\t\t\t\tnewLocale = getLocaleByCity(allLocales.locales, city);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\t//Redirect to error page\n\t\t\t} finally {\n\t\t\t\tif (newLocale !== undefined) {\n\t\t\t\t\tdispatch(updateRoute(`details-${newLocale.id}`));\n\t\t\t\t} else {\n\t\t\t\t\t//Redirect to error page\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}, [allLocales, responseReceived, dispatch, city]);\n\n\tconst handleUnitChange = async () => {\n\t\tif (scale.localeCompare(CONSTANTS.METRIC_SCALE) === 0) {\n\t\t\tdispatch(setUnits(CONSTANTS.FAHRENHEIT_SCALE));\n\n\t\t\tif (allLocales.locales.length) {\n\t\t\t\tconst copy = [...allLocales.locales];\n\t\t\t\tconst newList = await fetchUpdates(copy, CONSTANTS.FAHRENHEIT_SCALE);\n\t\t\t\tconst parsed = [];\n\n\t\t\t\tnewList.forEach((result) => {\n\t\t\t\t\tparsed.push(parseResults(result, CONSTANTS.FAHRENHEIT_SCALE));\n\t\t\t\t});\n\n\t\t\t\tdispatch(mergeLocales(parsed));\n\t\t\t}\n\t\t} else {\n\t\t\tdispatch(setUnits(CONSTANTS.METRIC_SCALE));\n\n\t\t\tif(allLocales.locales.length) {\n\t\t\t\tconst copy = [...allLocales.locales];\n\n\t\t\t\tconst newList = await fetchUpdates(copy, CONSTANTS.METRIC_SCALE);\n\t\t\t\tconst parsed = [];\n\n\t\t\t\tnewList.forEach((result) => {\n\t\t\t\t\tparsed.push(parseResults(result, CONSTANTS.METRIC_SCALE));\n\t\t\t\t});\n\n\t\t\t\tdispatch(mergeLocales(parsed));\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleSubmit = async (val) => {\n\t\t//Process input\n\t\tconst searchString = processSearchTerms(val);\n\n\t\tconst getWeather = async () => {\n\t\t\tconst result = await fetchWeather(searchString);\n\t\t\treturn parseResults(result, scale);\n\t\t}\n\t\t\n\t\tconst response = await getWeather();\n\n\t\tif (response === undefined) {\n\t\t\tif (searchRef.current) {\n\t\t\t\tsetTooltip({\n\t\t\t\t\tshow: true,\n\t\t\t\t\tx: searchRef.current.getBoundingClientRect().right - 100,\n\t\t\t\t\ty: searchRef.current.getBoundingClientRect().bottom\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(() => setTooltip({\n\t\t\t\t\t...tooltip,\n\t\t\t\t\tshow: false\n\t\t\t\t}), 5000);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tsetCity(response.city);\n\t\tsetResponseReceived(true);\n\n\t\tif (allLocales.locales.length) {\n\t\t\tdispatch(mergeLocales([response]));\n\t\t} else {\n\t\t\tdispatch(setLocales([response]));\n\t\t}\n\t};\n\n\tconst handleSubmitWhenOffline = () => {\n\t\tif (searchRef.current) {\n\t\t\tsetTooltip({\n\t\t\t\tshow: true,\n\t\t\t\tx: searchRef.current.getBoundingClientRect().right - 100,\n\t\t\t\ty: searchRef.current.getBoundingClientRect().bottom\n\t\t\t});\n\n\t\t\tsetTimeout(() => setTooltip({\n\t\t\t\t...tooltip,\n\t\t\t\tshow: false\n\t\t\t}), 5000);\n\t\t}\n\t}\n\n\treturn(\n\t\t<Header rows=\"60px\" columns=\"0fr 0fr 1fr\">\n\t\t\t<Online>\n\t\t\t\t<Tooltip\n\t\t\t\t\tshow={tooltip.show}\n\t\t\t\t\tx={tooltip.x}\n\t\t\t\t\ty={tooltip.y}\n\t\t\t\t\ttext=\"Your search returned no results! :( Please try again.\"\n\t\t\t\t/>\n\t\t\t</Online>\n\t\t\t<Offline>\n\t\t\t\t<Tooltip\n\t\t\t\t\tshow={tooltip.show}\n\t\t\t\t\tx={tooltip.x}\n\t\t\t\t\ty={tooltip.y}\n\t\t\t\t\ttext=\"Search function is not available when you're offline! :( Check your network connection and try again.\"\n\t\t\t\t/>\n\t\t\t</Offline>\n\t\t\t<HeaderCell>\n\t\t\t\tSearch:\n\t\t\t</HeaderCell>\n\t\t\t<Cell col=\"2\">\n\t\t\t\t<Online>\n\t\t\t\t\t<SearchField onSubmit={handleSubmit} searchRef={searchRef}  />\n\t\t\t\t</Online>\n\t\t\t\t<Offline>\n\t\t\t\t\t<SearchField onSubmit={handleSubmitWhenOffline} searchRef={searchRef} />\n\t\t\t\t</Offline>\n\t\t\t</Cell>\n\t\t\t<HeaderCell col=\"3\">\n\t\t\t\t<Online>\n\t\t\t\t\t<ScaleButton onClick={handleUnitChange}>\n\t\t\t\t\t\t{scale.localeCompare(CONSTANTS.METRIC_SCALE) === 0 ? \"°C\" : \"°F\"}\n\t\t\t\t\t</ScaleButton>\n\t\t\t\t</Online>\n\t\t\t</HeaderCell>\n\t\t</Header>\n\t)\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"./grid-items\";\nimport Navbar from \"./nav-list\";\nimport Header from \"./header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNavOpen, selectNavOpen } from \"../state/app-settings-slice\";\n\nconst NavbarLayout = styled.div`\n\tposition: relative;\n\theight: 100%;\n\tmin-height: 600px;\n\tdisplay: flex;\n`;\n\nconst NavCell = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n\twidth: ${p => p.width ? p.width : \"initial\"};\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\tbackground-color: #4A4E69;\n\tuser-select: none;\n\tz-index: 10;\n\tmin-height: 600px;\n`;\n\nconst Body = styled.div`\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\twidth: ${p => p.navWidth ? `calc(100% - ${p.navWidth})` : \"100%\"};\n\toverflow: visible;\n`;\n\nconst BodyContents = styled(Grid)`\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\toverflow: auto;\n\twidth: 100%;\n\theight: 100%;\n`;\n\nexport default ({\n\tMain,\n\tactiveRoute,\n\tallRoutes,\n}) => {\n\tconst dispatch = useDispatch();\n\tconst navbarExpanded = useSelector(selectNavOpen);\n\n\tconst toggleNavbar = () => {\n\t\tdispatch(setNavOpen(!navbarExpanded));\n\t}\n\n\tconst navWidth = navbarExpanded ? \"225px\" : \"70px\";\n\n\tif (Main === undefined) return null;\n\n\treturn(\n\t\t<NavbarLayout\n\t\t\trows=\"100vh\"\n\t\t>\n\t\t\t<NavCell width={navWidth}>\n\t\t\t\t<Navbar\n\t\t\t\t\tactiveRoute={activeRoute}\n\t\t\t\t\tallRoutes={allRoutes}\n\t\t\t\t\ttoggleNavWidth={toggleNavbar}\n\t\t\t\t\tnavOpen={navbarExpanded}\n\t\t\t\t\twidth={navWidth}\n\t\t\t\t/>\n\t\t\t</NavCell>\n\t\t\t<Body navWidth={navWidth} col=\"2\">\n\t\t\t\t<BodyContents rows=\"10vh 90vh\" columns=\"1fr\">\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell row=\"2\">\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</Cell>\n\t\t\t\t</BodyContents>\n\t\t\t</Body>\n\t\t</NavbarLayout>\n\t)\n}","import {\n\tfindIndex,\n\tconcat,\n\tisEqual,\n\tdifferenceWith,\n\tintersectionWith,\n\tpullAllWith,\n\tisEmpty\n} from \"lodash\";\n\nconst { isArray } = Array;\n\n/**\n * Used to merge arrays of notes. Each note should have:\n * \t- an id,\n *  - a body,\n *  - a city name\n * @param {[]} oldList \n * @param {[]} newList \n */\nexport const mergeNoteLists = (oldList, newList) => {\n\tif (!isArray(oldList) || !isArray(newList)) {\n\t\tthrow new TypeError(\"Both parameters must be arrays.\");\n\t}\n\n\t//Copy input arrays\n\tconst oldCopy = oldList.slice();\n\tconst newCopy = newList.slice();\n\n\t//Extract any exactly-matching values\n\tconst output = intersectionWith(oldCopy, newCopy, isEqual);\n\n\t//Pull distinct values from each array\n\tconst oldDistinct = differenceWith(oldCopy, newCopy, isEqual);\n\tconst newDistinct = differenceWith(newCopy, oldCopy, isEqual);\n\n\t//Initialize variable to store ids of any notes with updated values\n\tconst copiedNotes = [];\n\n\tif (!isEmpty(oldDistinct)) {\n\t\toldDistinct.forEach((entry) => {\n\t\t\tconst idx = findIndex(newDistinct, o => \n\t\t\t\to.id.localeCompare(entry.id) === 0\t\n\t\t\t);\n\n\t\t\t//If no match has been found for the current entry,\n\t\t\tif (idx === -1) {\n\t\t\t\t//Push entry without changes\n\t\t\t\toutput.push({...entry});\n\t\t\t} else {\n\t\t\t\t//Else copy all values to new object and update where relevant\n\t\t\t\tconst updated = {...entry};\n\t\t\t\tupdated.body = newDistinct[idx].body;\n\t\t\t\tupdated.timeStamp = newDistinct[idx].timeStamp;\n\n\t\t\t\toutput.push(updated);\n\t\t\t\tcopiedNotes.push(entry.id);\n\t\t\t}\n\t\t});\n\t}\n\n\t//Remove any ids already copied to output array from newDistinct\n\tpullAllWith(newDistinct, copiedNotes, (a, b) => isEqual(a.id, b));\n\tconst concatenated = concat(output, newDistinct);\n\n\treturn concatenated;\n}\n\n/**\n * Sorts the given list in ascending order by timestamp field\n * @param {[]} list \n */\nexport const sortByDate = (list) => {\n\treturn sortListByDate(list, 0, list.length - 1);\n}\n\n/**\n * Retrieves a single note from a list based on the note's id\n * @param {[]} list \n * @param {String} id \n */\nexport const getNoteById = (list, id) => {\n\tif (!isArray(list)) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tif (list[i].id.localeCompare(id) === 0) {\n\t\t\treturn list[i];\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Selects any notes associated with the given locale id from a list.\n * @param {[]} list \n * @param {String} id\n */\nexport const getNotesByLocale = (list, id) => {\n\tif (!isArray(list)) {\n\t\tthrow TypeError(\"First parameter must be an array.\");\n\t}\n\n\t//Copy the input list\n\tconst output = list.slice();\n\n\t//If no results are found, return empty array\n\tif (findIndex(output, (item) => item.localeId.localeCompare(id) === 0) === -1) {\n\t\treturn [];\n\t}\n\n\t//Remove all entries that don't match the given id\n\tpullAllWith(output, id, (o) => o.localeId.localeCompare(id) !== 0);\n\n\treturn output;\n}\n\n/// HELPER FUNCTIONS ///\n\n/**\n * Selects a pivot at the rough halfway point of a list and partitions that list,\n * plus swaps relevant elements.\n * @param {} list - A list of note items\n * @param {*} left - The currently-selected left index\n * @param {*} right - The currently-selected right index\n */\nconst partition = (list, left, right) => {\n\tlet pivot = list[Math.floor((right + left) / 2)];\n\tlet i = left;\n\tlet j = right;\n\n\twhile (i <= j) {\n\t\twhile (list[i].timeStamp - pivot.timeStamp > 0) {\n\t\t\ti++;\n\t\t}\n\t\twhile (list[j].timeStamp - pivot.timeStamp < 0) {\n\t\t\tj--;\n\t\t}\n\n\t\tif (i <= j) {\n\t\t\tswap(list, i, j);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\n\treturn i;\n}\n\n/**\n * Swaps two elements in a list\n * @param {[]} items - The list of items\n * @param {integer} left - The index of the first element\n * @param {integer} right - The index of the second element\n */\nconst swap = (items, left, right) => {\n\tlet temp = items[left];\n\titems[left] = items[right];\n\titems[right] = temp;\n}\n\n/**\n * Quicksort list by the id value.\n * @param {[]} items - The list of note items\n * @param {integer} left - The starting leftmost index\n * @param {integer} right - The starting rightmost index\n */\nconst sortListByDate = (items, left, right) => {\n\tif (!items || !items.length) {\n\t\tthrow TypeError(\"Array parameter must not be empty or undefined.\");\n\t}\n\n\tlet idx = undefined;\n\n\tif (items.length > 1) {\n\t\tidx = partition(items, left, right);\n\n\t\t//If there are more elements on the left,\n\t\tif (left < idx - 1) {\n\t\t\t//Select that segment\n\t\t\tsortListByDate(items, left, idx - 1);\n\t\t}\n\n\t\t//Else if there are more elements on the right,\n\t\tif (idx < right) {\n\t\t\t//Use that segment\n\t\t\tsortListByDate(items, idx, right);\n\t\t}\n\t}\n\n\t//If only one item is in the list, return the list as-is\n\treturn items;\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { findIndex } from \"lodash\";\nimport { mergeNoteLists, sortByDate, getNoteById, getNotesByLocale } from \"../app/note-list-tools\";\n\n/**\n * A note should consist of:\n * \t- id: an unique ID\n * \t- body: a body consisting of a text of maximum 460 characters\n * \t- localeId: the id of an associated locale\n * \t- timeStamp: the time and date of submission or latest edit\n */\nexport const notesSlice = createSlice({\n\tname: \"notes\",\n\tinitialState: {\n\t\tnotes: []\n\t},\n\treducers: {\n\t\t//Overwrite the full list of notes\n\t\tsetNotes: (state, {payload}) => {\n\t\t\tconst sorted = payload.length ? sortByDate(payload) : payload;\n\t\t\tstate.notes = sorted;\n\t\t},\n\t\t//Merge one list with that already in state\n\t\tmergeNotes: (state, {payload}) => {\n\t\t\tconst allNotes = [...state.notes];\n\n\t\t\tif (allNotes.length === 0) {\n\t\t\t\tstate.notes = payload;\n\t\t\t} else {\n\t\t\t\tconst merged = mergeNoteLists(allNotes, payload);\n\t\t\t\tconst sorted = sortByDate(merged);\n\t\t\t\tstate.notes = sorted;\n\t\t\t}\n\t\t},\n\t\t//Delete the note with the given id\n\t\tdeleteById: (state, {payload}) => {\n\t\t\tconst allNotes = [...state.notes];\n\n\t\t\tconst idx = findIndex(allNotes, (item) => item.id === payload);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tconst newList = allNotes.filter((_item, i) => i !== idx);\n\t\t\t\tstate.notes = newList;\n\t\t\t}\n\t\t},\n\t\t//Delete the notes associated with the given locale\n\t\tdeleteByLocale: (state, {payload}) => {\n\t\t\tconst allNotes = [...state.notes];\n\n\t\t\tconst newList = allNotes.filter((item) => item.localeId.localeCompare(payload) !== 0);\n\n\t\t\tstate.notes = newList;\n\t\t}\n\t}\n});\n\nexport const { setNotes, mergeNotes, deleteById, deleteByLocale } = notesSlice.actions;\n\nexport const selectNotes = state => state.notes.notes;\nexport const selectNoteById = (state, id) => getNoteById(state.notes.notes, id);\nexport const selectNotesByLocale = (state, localeId) => getNotesByLocale(state.notes.notes, localeId);\n\nexport default notesSlice.reducer;","import styled from \"styled-components\";\n\nconst Card = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tbox-sizing: border-box;\n\tborder: none;\n\tborder-radius: 18px;\n\tpadding: 1em;\n\tbox-shadow: 5px 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport default Card;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"../layout/card\";\nimport { Grid, Cell } from \"../layout/grid-items\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\"\n\nconst ConfirmButton = styled(Grid)`\n\tbackground: rgba(255, 255, 255, 0.7);\n\tcolor: #4A4E69;\n\tgrid-template-rows: min-content;\n\tgrid-template-columns: 1fr 4fr;\n\tborder-radius: 18px;\n\tborder-color: rgba(255, 255, 255, 0.7);\n\theight: min-content;\n\twidth: min-content;\n\tpadding: 1em;\n\tcursor: pointer;\n\tgrid-gap: 10px;\n\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n\n\t:hover {\n\t\tbackground: rgb(255, 255, 255);\n\t}\n`;\n\nconst CancelButton = styled(Grid)`\n\tgrid-template-rows: min-content;\n\tgrid-template-columns: 1fr 4fr;\n\tborder-radius: 18px;\n\tcolor: rgba(255, 255, 255, 0.7);\n\tborder: 1px solid rgba(255, 255, 255, 0.7);\n\theight: min-content;\n\twidth: min-content;\n\tpadding: 1em;\n\tcursor: pointer;\n\tgrid-gap: 10px;\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n\n\t:hover {\n\t\tcolor: rgb(255, 255, 255);\n\t\tborder-color: rgb(255, 255, 255);\n\t}\n`;\n\nconst Parent = styled.div`\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n\twidth: 100vw;\n\theight: 100vh;\n\tz-index: 300;\n\tvisibility: ${p => p.visible ? \"visible\": \"hidden\"};\n`;\n\nconst Prompt = styled(Card)`\n\tposition: fixed;\n\tz-index: 30;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n\tbackground-color: #4A4E69;\n\twidth: 400px;\n\theight: 300px;\n`;\n\nconst PromptCell = styled(Cell)`\n\tborder-bottom: 1px solid rgba(255, 255, 255, 0.6);\n\tpadding: 1em;\n`;\n\nconst PromptModal = ({\n\theader,\n\ttext,\n\tonConfirm,\n\tonCancel,\n\tvisible,\n}) => {\n\treturn (\n\t\t<Parent visible={visible}>\n\t\t\t<Prompt>\n\t\t\t\t<Grid rows=\"min-content min-content auto\" columns=\"1fr 1fr\">\n\t\t\t\t\t<PromptCell col=\"1/span 2\">\n\t\t\t\t\t\t<h2>{header}</h2>\n\t\t\t\t\t</PromptCell>\n\t\t\t\t\t<PromptCell row=\"2\" col=\"1/span 2\" className=\"body-text\">\n\t\t\t\t\t\t{text}\n\t\t\t\t\t</PromptCell>\n\t\t\t\t\t<Cell row=\"3\" col=\"1\">\n\t\t\t\t\t\t<ConfirmButton className=\"confirm-button\" onClick={onConfirm}>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Icon icon=\"check\" />\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell col=\"2\">\n\t\t\t\t\t\t\t\tConfirm\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t</ConfirmButton>\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell style={{padding: \"1em\"}} row=\"3\" col=\"2\">\n\t\t\t\t\t\t<CancelButton className=\"cancel-button\" onClick={onCancel}>\n\t\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t\t<Icon icon=\"times\" />\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t<Cell col=\"2\">\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t</CancelButton>\n\t\t\t\t\t</Cell>\n\t\t\t\t</Grid>\n\t\t\t</Prompt>\n\t\t</Parent>\n\t)\n}\n\nexport default PromptModal;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { get } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateRoute } from \"../state/router-slice\";\nimport { deleteByLocale, selectNotesByLocale } from \"../state/notes-slice\";\nimport { setFavorite, deleteById } from \"../state/locales-slice\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"./grid-items\";\nimport Card from \"./card\";\nimport { FAHRENHEIT_SCALE, METRIC_SCALE, SCIENTIFIC_SCALE, COUNTRY_CODES } from \"../app/constants\";\nimport Tooltip from \"../components/tooltip\";\nimport PromptModal from \"../components/prompt-modal\";\n\nconst ListEntryCard = styled(Card)`\n\tposition: relative;\n\tbackground-color: #4A4E69;\n\theight: auto;\n\ttext-align: left;\n\tuser-select: none;\n\twidth: 98%;\n\tmin-width: 700px;\n`;\n\nconst CityCell = styled(Cell)`\n\tfont-weight: 600;\n\topacity: 0.7;\n\tcursor: pointer;\n\t:hover {\n\t\topacity: 1;\n\t}\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n`;\n\nconst TempCell = styled(Cell)`\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\ttext-align: left;\n\tpadding-left: 1em;\n\tletter-spacing: 1px;\n`;\n\n/**\n * Parses the unit marker associated with a weatherstack request and returns a relevant temperature unit.\n * \n * @param {String} scale - The scale marker associated with a request to weatherstack.\n */\nconst getUnits = (scale) => {\n\tswitch (true) {\n\t\tcase scale === FAHRENHEIT_SCALE:\n\t\t\treturn \"F\";\n\t\tcase scale === METRIC_SCALE:\n\t\t\treturn \"C\";\n\t\tcase scale === SCIENTIFIC_SCALE:\n\t\t\treturn \"K\";\n\t\tdefault:\n\t\t\treturn \"C\";\n\t}\n}\n\n/**\n * Defines a single list entry in a table of weather results.\n * Takes a WeatherEntryItem and a row number. \n */\nconst ListEntry = ({ entry, row, items, state, setState, showPrompt }) => {\n\tconst dispatch = useDispatch();\n\tconst notes = useSelector((state) => selectNotesByLocale(state, entry.id));\n\n\tif (entry === undefined) return null;\n\n\tconst units = getUnits(entry.scale);\n\n\tconst showHeartTooltip = (evt) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tactiveHeartTooltip: {\n\t\t\t\tid: entry.id,\n\t\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t\t}\n\t\t});\n\t};\n\n\tconst showDeleteTooltip = (evt) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tactiveDeleteTooltip: {\n\t\t\t\tid: entry.id,\n\t\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t\t}\n\t\t});\n\t};\n\n\tconst showEyeTooltip = (evt) => {\n\t\tsetState({\n\t\t\t...state,\n\t\t\tactiveEyeTooltip: {\n\t\t\t\tid: entry.id,\n\t\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t\t}\n\t\t});\n\t};\n\n\tconst hideAllTooltips = () => {\n\t\tsetState({\n\t\t\tactiveHeartTooltip: {\n\t\t\t\t...state.activeHeartTooltip,\n\t\t\t\tid: -1\n\t\t\t},\n\t\t\tactiveEyeTooltip: {\n\t\t\t\t...state.activeEyeTooltip,\n\t\t\t\tid: -1\n\t\t\t},\n\t\t\tactiveDeleteTooltip: {\n\t\t\t\t...state.activeDeleteTooltip,\n\t\t\t\tid: -1\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleDeleteClicked = async () => {\n\t\tif (notes.length) {\n\t\t\tshowPrompt(entry.id);\n\t\t} else {\n\t\t\tdispatch(deleteById({ id: entry.id, allLocales: items }));\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip \n\t\t\t\tshow={entry.id.localeCompare(state.activeHeartTooltip.id) === 0} \n\t\t\t\ttext={entry.favorited ? \"Remove favorite\" : \"Add favorite\"}\n\t\t\t\tx={state.activeHeartTooltip.x}\n\t\t\t\ty={state.activeHeartTooltip.y}\n\t\t\t/>\n\t\t\t<Tooltip\n\t\t\t\tshow={entry.id.localeCompare(state.activeEyeTooltip.id) === 0}\n\t\t\t\ttext={\"View details\"}\n\t\t\t\tx={state.activeEyeTooltip.x}\n\t\t\t\ty={state.activeEyeTooltip.y}\n\t\t\t/>\n\t\t\t<Tooltip\n\t\t\t\tshow={entry.id.localeCompare(state.activeDeleteTooltip.id) === 0}\n\t\t\t\ttext={\"Delete\"}\n\t\t\t\tx={state.activeDeleteTooltip.x}\n\t\t\t\ty={state.activeDeleteTooltip.y}\n\t\t\t/>\n\t\t<Cell row={row}>\n\t\t\t<ListEntryCard>\n\t\t\t\t<Grid columns=\"1fr 4fr 4fr 6fr\" rows=\"1.2em\">\n\t\t\t\t\t<CityCell onClick={() => dispatch(updateRoute(`details-${entry.id}`))}>\n\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\ticon={[\"far\", \"eye\"]}\n\t\t\t\t\t\t\tonMouseOver={showEyeTooltip}\n\t\t\t\t\t\t\tonMouseOut={hideAllTooltips}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CityCell>\n\t\t\t\t\t<CityCell col=\"2\" onClick={() => dispatch(updateRoute(`details-${entry.id}`))}>\n\t\t\t\t\t\t\t<span onMouseOver={showEyeTooltip} onMouseOut={hideAllTooltips}>{`${entry.city} - ${get(COUNTRY_CODES, entry.country)}`}</span>\n\t\t\t\t\t</CityCell>\n\t\t\t\t\t<TempCell col=\"3\">\n\t\t\t\t\t\t\t<strong>{`${entry.temperature} °${units}`}</strong> {`at`} <strong>{entry.observationTime}</strong>\n\t\t\t\t\t</TempCell>\n\t\t\t\t\t<CityCell col=\"4\">\n\t\t\t\t\t\t{entry.favorited &&\n\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\ticon=\"heart\" \n\t\t\t\t\t\t\t\tonMouseOver={showHeartTooltip}\n\t\t\t\t\t\t\t\tonMouseOut={hideAllTooltips}\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setFavorite({ id: entry.id, favorite: false, allLocales: items }))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{!entry.favorited &&\n\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\ticon={[\"far\", \"heart\"]} \n\t\t\t\t\t\t\t\tonMouseOver={showHeartTooltip}\n\t\t\t\t\t\t\t\tonMouseOut={hideAllTooltips}\n\t\t\t\t\t\t\t\tonClick={() => dispatch(setFavorite({ id: entry.id, favorite: true, allLocales: items }))} \n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</CityCell>\n\t\t\t\t\t<CityCell col=\"5\">\n\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\ticon=\"minus-circle\" \n\t\t\t\t\t\t\tonMouseOver={showDeleteTooltip}\n\t\t\t\t\t\t\tonMouseOut={hideAllTooltips}\n\t\t\t\t\t\t\tonClick={handleDeleteClicked} \n\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CityCell>\n\t\t\t\t</Grid>\n\t\t\t</ListEntryCard>\n\t\t</Cell>\n\t\t</>\n\t)\n};\n\nconst Table = ({\n\titems,\n\tshowPrompt\n}) => {\n\tconst [ state, setState ] = React.useState({\n\t\tactiveHeartTooltip: {\n\t\t\tid: -1,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t},\n\t\tactiveEyeTooltip: {\n\t\t\tid: -1,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t},\n\t\tactiveDeleteTooltip: {\n\t\t\tid: -1,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t},\n\t});\n\n\tif (items === undefined || !items.length) return null;\n\n\treturn(\n\t\t<>\n\t\t\t<Grid columns=\"1fr\" rows={`repeat(${items.length}, 3em)`} gridGap=\"10px\">\n\t\t\t\t{items.map((entry, idx) => {\n\t\t\t\t\treturn (<ListEntry entry={entry} key={`weather-list-entry-${entry.id}:${idx}`} row={idx + 1} items={items} state={state} setState={setState} showPrompt={showPrompt} />);\n\t\t\t\t})}\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n\nexport default Table;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\nimport Table from \"../../layout/results-table\";\nimport { reorderByFavorite } from \"../../app/locale-list-tools\";\nimport { deleteById } from \"../../state/locales-slice\";\nimport { deleteByLocale } from \"../../state/notes-slice\";\nimport PromptModal from \"../../components/prompt-modal\";\nimport { useDispatch } from \"react-redux\";\n\nconst Body = styled(Grid)`\n\tpadding: 2em;\n\tposition: relative;\n\tmin-width: 700px;\n`;\n\nconst ListCell = styled(Cell)`\n\toverflow-y: auto;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #4A4E69;\n\t}\n\n\tscrollbar-color: #4A4E69;\n\tscrollbar-width: 4px;\n`;\n\nconst WaitingText = styled.div`\n\tfont-weight: 800;\n\ttext-align: left;\n\tfont-size: 1em;\n\tletter-spacing: 2px;\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n`;\n\nconst HomeList = ({\n\titems = [],\n\tloaded,\n}) => {\n\tconst [ list, setList ] = React.useState(items);\n\tconst dispatch = useDispatch();\n\tconst [state, setState] = React.useState({\n\t\tpromptModalVisible: false,\n\t\tactiveEntry: -1,\n\t});\n\n\tconst onDeleteEntry = () => {\n\t\t//Delete the entry...\n\t\tdispatch(deleteById(state.activeEntry));\n\t\t//...and any associated notes\n\t\tdispatch(deleteByLocale(state.activeEntry));\n\t};\n\n\tconst setPromptModalVisibility = (bool) => {\n\t\tsetState({ ...state, promptModalVisible: bool });\n\t}\n\n\tconst showPrompt = (id) => {\n\t\tsetState({ promptModalVisible: true, activeEntry: id })\n\t}\n\n\tReact.useEffect(() => {\n\t\tconst updateList = () => {\n\t\t\tlet newList = [];\n\n\t\t\tif (items.length) {\n\t\t\t\titems.forEach((item) => {\n\t\t\t\t\tnewList.push(item);\n\t\t\t\t});\n\n\t\t\t\tconst sorted = reorderByFavorite(newList);\n\n\t\t\t\tsetList(sorted);\n\t\t\t}\n\t\t}\n\n\t\tupdateList();\n\t}, [items]);\n\n\tif (!items) return null;\n\n\treturn(\n\t\t<Body rows=\"80vh\" columns=\"1fr\">\n\t\t\t<PromptModal \n\t\t\t\tonCancel={() => setPromptModalVisibility(false)} \n\t\t\t\tonConfirm={onDeleteEntry}\n\t\t\t\theader=\"Delete this saved location?\"\n\t\t\t\ttext=\"You can always search for it to add it to the list again, but your notes will be lost.\"\n\t\t\t\tvisible={state.promptModalVisible}\n\t\t\t/>\n\t\t\t<ListCell>\n\t\t\t\t{loaded && \n\t\t\t\t\t<Table items={list} showPrompt={showPrompt} />\n\t\t\t\t}\n\t\t\t\t{!loaded &&\n\t\t\t\t\t<WaitingText>Please wait while we poke our heads outside...</WaitingText>\n\t\t\t\t}\n\t\t\t</ListCell>\n\t\t</Body>\n\t)\n}\n\nexport default HomeList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\n\nconst Parent = styled(Grid)`\n\tmin-width: 700px;\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(-50%) translateY(-50%);\n\theight: min-content;\n`;\n\nconst IconContainer = styled.div`\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateY(-50%) translateX(-50%);\n\tfont-size: 4em;\n`;\n\nconst TextContainer = styled.div`\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateY(-50%) translateX(-50%);\n\tfont-size: 2em;\n\tletter-spacing: 2px;\n\tfont-weight: 800;\n`;\n\nconst HiddenHeader = styled.h1`\n\toverflow: hidden;\n\tposition: fixed;\n\theight: 0px;\n\twidth: 0px;\n\topacity: 0;\n`;\n\nconst EmptyState = () => {\n\treturn (\n\t\t<>\n\t\t\t<HiddenHeader>home</HiddenHeader>\n\t\t\t<Parent rows=\"min-content min-content\" columns=\"1fr\">\n\t\t\t\t<Cell>\n\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t<Icon icon=\"surprise\" />\n\t\t\t\t\t</IconContainer>\n\t\t\t\t</Cell>\n\t\t\t\t<Cell row=\"2\">\n\t\t\t\t\t<TextContainer>\n\t\t\t\t\t\tThere's nothing here yet! Try searching for a city to add it to your homepage.\n\t\t\t\t\t</TextContainer>\n\t\t\t\t</Cell>\n\t\t\t</Parent>\n\t\t</>\n\t)\n};\n\nexport default EmptyState;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Offline, Online } from \"react-detect-offline\";\nimport Layout from \"../../layout/navbar-layout\";\nimport Table from \"./home-body\";\nimport { parseResults } from \"../../app/manage-query-results\";\nimport { fetchList, fetchUpdates, getWeatherByCoordinates } from \"../../app/fetch-weather-for-locale\";\nimport { setLocales, mergeLocales, selectLocales } from \"../../state/locales-slice\";\nimport { setNotes } from \"../../state/notes-slice\";\nimport { updateRoute } from \"../../state/router-slice\";\nimport { selectFirstVisit, selectUnits, setFirstVisit } from \"../../state/app-settings-slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport EmptyState from \"./empty-state\";\n\nconst defaultQueries = [\n\t\"Beijing\",\n\t\"Buenos Aires\",\n\t\"Cairo\",\n\t\"Chongqing\",\n\t\"Delhi\",\n\t\"Dhaka\",\n\t\"Istanbul\",\n\t\"Karachi\",\n\t\"Mexico City\",\n\t\"Mumbai\",\n\t\"New York\",\n\t\"Osaka\",\n\t\"Sao Paulo\",\n\t\"Shanghai\",\n\t\"Tokyo\"\n];\n\nconst HiddenHeader = styled.h1`\n\toverflow: hidden;\n\tposition: fixed;\n\theight: 0px;\n\twidth: 0px;\n\tvisibility:  hidden;\n`;\n\n\nconst Body = () => {\n\tconst dispatch = useDispatch();\n\tconst [ loaded, setLoaded ] = React.useState(false);\n\tconst [ geolocation, setGeolocation ] = React.useState(undefined);\n\n\tconst storedLocales = useSelector(selectLocales);\n\tconst firstVisit = useSelector(selectFirstVisit);\n\tconst units = useSelector(selectUnits);\n\n\tconst queryPermissions = () => {\n\t\tif (navigator && navigator.permissions) {\n\t\t\tnavigator.permissions.query({ name: \"geolocation\" }).then((result) => {\n\t\t\tconsole.log(result)\n\t\t\tif (result.state === \"granted\") {\n\t\t\t\tsetGeolocation(result.state);\n\t\t\t} else if (result.state === \"prompt\") {\n\t\t\t\tsetGeolocation(result.state);\n\t\t\t} else {\n\t\t\t\tsetGeolocation(result.state);\n\t\t\t}\n\n\t\t\tresult.onchange = () => {\n\t\t\t\tsetGeolocation(result.state);\n\t\t\t}\n\t\t\t}).catch((err) => console.log(err));\t\n\t\t}\n\t};\n\n\tconst getWeatherByGeolocation = async (location) => {\n\n\t\ttry {\n\t\t\tconst lat = location.coords.latitude;\n\t\t\tconst long = location.coords.longitude;\n\n\t\t\tconst result = await getWeatherByCoordinates(lat, long, units);\n\t\t\tconst parsed = parseResults(result, units);\n\n\t\t\tif (parsed !== undefined) {\n\t\t\t\tawait dispatch(mergeLocales([ parsed ]));\n\n\t\t\t\t//If the city already exists in the store, use the extant id for the redirect\n\t\t\t\tlet match = undefined;\n\t\t\t\t\n\t\t\t\tfor (let i = 0; i < storedLocales.locales.length; i++) {\n\t\t\t\t\tif (storedLocales.locales[i].city.localeCompare(parsed.city) === 0) {\n\t\t\t\t\t\tmatch = storedLocales.locales[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdispatch(updateRoute(`details-${match !== undefined ? match.id : parsed.id}`));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tReact.useEffect(() => {\n\t\tif (firstVisit && geolocation !== undefined) {\n\t\t\tif (geolocation === \"granted\") {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(getWeatherByGeolocation, (error) => console.log(error));\n\t\t\t} else if (geolocation === \"prompt\") {\n\t\t\t\tnavigator.geolocation.getCurrentPosition(getWeatherByGeolocation, (error) => console.log(error));\n\t\t\t}\n\t\t}\n\t}, [geolocation]);\n\n\tReact.useEffect(() => {\n\t\tconst getWeatherList = async () => {\n\t\t\tlet result = [];\n\n\t\t\tif (firstVisit) {\n\t\t\t\tqueryPermissions();\n\t\t\t}\n\n\t\t\t//If first visit, use default query list, else update existing list\n\t\t\ttry {\n\t\t\t\tif (firstVisit) {\n\t\t\t\t\tresult = await fetchList(defaultQueries, units);\n\t\t\t\t\tdispatch(setFirstVisit(false));\n\t\t\t\t} else if (!firstVisit && storedLocales.locales.length) {\n\t\t\t\t\tresult = await fetchUpdates(storedLocales.locales, units);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tdispatch(updateRoute(\"error\"));\n\t\t\t}\n\n\t\t\t//Generate and populate list of fresh results\n\t\t\tconst newList = [];\n\n\n\t\t\tif (result.length) {\n\t\t\t\tresult.forEach((res) => {\n\t\t\t\t\tif(res !== undefined) {\n\t\t\t\t\t\tnewList.push(parseResults(res, units));\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (storedLocales.locales.length) {\n\t\t\t\t//Merge the new results with the existing ones\n\t\t\t\tdispatch(mergeLocales(newList));\n\t\t\t} else {\n\t\t\t\tdispatch(setLocales(newList));\n\t\t\t\t//Clear out notes, just in case\n\t\t\t\tdispatch(setNotes([]));\n\t\t\t}\n\n\t\t\tsetLoaded(true);\n\t\t}\n\n\t\tgetWeatherList();\n\t\t\n\t}, []);\n\n\tif (storedLocales.locales === undefined || storedLocales.locales.length === 0) {\n\t\treturn <EmptyState />\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<HiddenHeader>home</HiddenHeader>\n\t\t\t<Table items={storedLocales.locales} loaded={loaded} />\n\t\t</>\n\t)\n}\n\nconst OfflineBody = () => {\n\tconst storedLocales = useSelector(selectLocales);\n\n\tif (storedLocales === undefined || storedLocales.locales.length === 0) {\n\t\treturn <EmptyState />\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<HiddenHeader>home</HiddenHeader>\n\t\t\t<Table items={storedLocales.locales} loaded={true} />\n\t\t</>\n\t)\n}\n\nexport default ({ activeRoute, allRoutes }) => {\n\t\n\treturn(\n\t\t<>\n\t\t\t<Online>\n\t\t\t\t<Layout \n\t\t\t\t\tMain={() => <Body />}\n\t\t\t\t\tactiveRoute={activeRoute}\n\t\t\t\t\tallRoutes={allRoutes}\n\t\t\t\t/>\n\t\t\t</Online>\n\t\t\t<Offline>\n\t\t\t\t<Layout \n\t\t\t\t\tMain={() => <OfflineBody />}\n\t\t\t\t\tactiveRoute={activeRoute}\n\t\t\t\t\tallRoutes={allRoutes}\n\t\t\t\t/>\n\t\t\t</Offline>\n\t\t</>\n\t)\n}","import React from \"react\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\n\nexport const getIconForKeyword = (keyword, observationTime) => {\n\tswitch (true) {\n\t\tcase /clear/i.test(keyword) || /sunny/i.test(keyword): {\n\t\t\tif (beforeNight(observationTime)) {\n\t\t\t\treturn <Icon icon={[\"far\", \"sun\"]} className=\"weather-icon\" />\n\t\t\t} else {\n\t\t\t\treturn <Icon icon=\"moon\" className=\"weather-icon\" />\n\t\t\t}\n\t\t}\n\t\tcase /partly cloudy/i.test(keyword): {\n\t\t\tif (beforeNight(observationTime)) {\n\t\t\t\treturn <Icon icon=\"cloud-sun\" className=\"weather-icon\" />\n\t\t\t} else {\n\t\t\t\treturn <Icon icon=\"cloud-moon\" className=\"weather-icon\" />\n\t\t\t}\n\t\t}\n\n\t\tcase /cloudy/i.test(keyword) || /overcast/i.test(keyword): {\n\t\t\treturn <Icon icon=\"cloud\" className=\"weather-icon\" />\n\t\t}\n\n\t\tcase /thundery/i.test(keyword): {\n\t\t\treturn <Icon icon=\"bolt\" className=\"weather-icon\" />\n\t\t}\n\n\t\tcase /fog/i.test(keyword) || /haze/i.test(keyword): {\n\t\t\treturn <Icon icon=\"smog\" className=\"weather-icon\" />\n\t\t}\n\n\t\tcase /blowing/i.test(keyword) || /blizzard/i.test(keyword): {\n\t\t\treturn <Icon icon=\"wind\" className=\"weather-icon\" />\n\t\t}\n\n\t\tcase /snow/i.test(keyword): {\n\t\t\treturn <Icon icon=\"snowflake\" className=\"weather-icon\" />\t\n\t\t}\n\n\t\tcase /drizzle/i.test(keyword): {\n\t\t\tif (beforeNight(observationTime)) {\n\t\t\t\treturn <Icon icon=\"cloud-sun-rain\" className=\"weather-icon\" />\n\t\t\t} else {\n\t\t\t\treturn <Icon icon=\"cloud-moon-rain\" className=\"weather-icon\" />\n\t\t\t}\n\t\t}\n\n\t\tcase (/light/i.test(keyword) || /patchy/i.test(keyword)) && /rain/i.test(keyword): {\n\t\t\tif (beforeNight(observationTime)) {\n\t\t\t\treturn <Icon icon=\"cloud-sun-rain\" className=\"weather-icon\" />\n\t\t\t} else {\n\t\t\t\treturn <Icon icon=\"cloud-moon-rain\" className=\"weather-icon\" />\n\t\t\t}\n\t\t}\n\n\t\tcase /moderate/i.test(keyword) && /rain/i.test(keyword): {\n\t\t\treturn <Icon icon=\"cloud-rain\" className=\"weather-icon\" />\n\t\t}\n\n\t\tcase /rain/i.test(keyword) && /heavy/i.test(keyword): {\n\t\t\treturn <Icon icon=\"cloud-showers-heavy\" className=\"weather-icon\" />\n\t\t}\n\n\t\tdefault: return <Icon icon=\"umbrella\" className=\"weather-icon\" />\n\t}\n}\n\nconst beforeNight = (time) => {\n\treturn time.localeCompare(\"20:00\") < 0 && time.localeCompare(\"6:00\") > 0;\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { get } from \"lodash\";\nimport { Grid, Cell } from \"../../../layout/grid-items\";\nimport { getIconForKeyword } from \"../icon-selector\";\nimport { COUNTRY_CODES } from \"../../../app/constants\";\n\nconst LocationNameText = styled.div`\n\tfont-weight: 800;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tletter-spacing: 3px;\n\tmax-width: 100%;\n\tbox-sizing: border-box;\n\ttext-align: left;\n\tfont-size: 2em;\n`;\n\nconst IconCell = styled(Cell)`\n\tfont-size: 8em;\n\ttext-align: center;\n\n\t.weather-icon {\n\t\tposition: relative;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t}\n`;\n\nconst TemperatureText = styled.div`\n\tfont-size: 5em;\n\ttext-align: center;\n\tposition: relative;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tletter-spacing: 2px;\n`;\n\nconst FeelsLikeText = styled.div`\n\tposition: relative;\n\tletter-spacing: 1px;\n\tfont-weight: 200;\n`;\n\n/**\n * Displays the primary information about the current weather\n * @param {*} param0 \n */\nconst MainInfoContainer = ({\n\tlocale,\n\ttime,\n\tunits\n}) => {\n\treturn (\n\t\t<Grid\n\t\t\trows=\"2em 2em 8em 2em\"\n\t\t\tcolumns=\"1fr 3fr\"\n\t\t\tgridGap=\"16px\"\n\t\t>\n\t\t\t<Cell row=\"1\" col=\"1/span 2\">\n\t\t\t\t<LocationNameText className=\"city-text\">\n\t\t\t\t\t{`${locale.city},`}\n\t\t\t\t</LocationNameText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"1/span 2\">\n\t\t\t\t<LocationNameText className=\"country-text\">\n\t\t\t\t\t{get(COUNTRY_CODES, locale.country)}\n\t\t\t\t</LocationNameText>\n\t\t\t</Cell>\n\t\t\t<IconCell row=\"3/span 2\">\n\t\t\t\t{getIconForKeyword(locale.descriptions[0], time)}\n\t\t\t</IconCell>\n\t\t\t<Cell row=\"3\" col=\"2\">\n\t\t\t\t<TemperatureText className=\"temperature-text\">\n\t\t\t\t\t{`${locale.temperature} ${units.temperature}`}\n\t\t\t\t</TemperatureText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"4\" col=\"2\">\n\t\t\t\t<FeelsLikeText className=\"feels-like-text\">\n\t\t\t\t\t{`/ feels like ${locale.feelsLike} ${units.temperature}`}\n\t\t\t\t</FeelsLikeText>\n\t\t\t</Cell>\n\t\t</Grid>\n\t)\n};\n\nexport default MainInfoContainer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { Grid, Cell } from \"../../../layout/grid-items\";\nimport { setFavorite, selectLocales } from \"../../../state/locales-slice\";\nimport Tooltip from \"../../../components/tooltip\";\nimport { getDirectionForDegrees } from \"../../../app/get-direction-for-degrees\";\n\nconst InfoLabel = styled.div`\n\tletter-spacing: 1px;\n\ttext-align: right;\n`;\n\nconst InfoText = styled.div`\n\tfont-weight: 600;\n\ttext-align: left;\n`;\n\nconst HeartIconContainer = styled.div`\n\tposition: relative;\n\tright: 0;\n\tfont-size: 2em;\n\tcursor: pointer;\n`;\n\n/**\n * Displays more detailed information about the current weather.\n * @param {*} param0 \n */\nconst DetailedInfoContainer = ({\n\tlocale,\n\ttime,\n\tunits\n}) => {\n\tconst dispatch = useDispatch();\n\tconst allLocales = useSelector(selectLocales);\n\n\tconst [ tooltip, setTooltip ] = React.useState({\n\t\tshow: false,\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\tconst showTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tshow: true,\n\t\t\tx: evt.target.getBoundingClientRect().left,\n\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t});\n\t};\n\n\tconst hideTooltip = () => {\n\t\tsetTooltip({\n\t\t\t...tooltip,\n\t\t\tshow: false,\n\t\t});\n\t};\n\n\treturn (\n\t\t<Grid columns=\"6fr 6fr 1fr\" rows=\"repeat(9, min-content)\" gridGap=\"10px\">\n\t\t\t<Tooltip\n\t\t\t\ttext={locale.favorited ? \"Remove favorite\" : \"Add favorite\"}\n\t\t\t\tshow={tooltip.show}\n\t\t\t\tx={tooltip.x}\n\t\t\t\ty={tooltip.y}\n\t\t\t/>\n\t\t\t<Cell>\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tObservation Time:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell col=\"2\">\n\t\t\t\t<InfoText className=\"observation-time-text\">\n\t\t\t\t\t{time}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"1/span 2\" col=\"3\">\n\t\t\t\t<HeartIconContainer>\n\t\t\t\t\t{locale.favorited &&\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\ticon=\"heart\" \n\t\t\t\t\t\t\tonClick={() => dispatch(setFavorite({ id: locale.id, favorite: false, allLocales: allLocales.locales }))} \n\t\t\t\t\t\t\tonMouseOver={showTooltip}\n\t\t\t\t\t\t\tonMouseOut={hideTooltip}\n\t\t\t\t\t\t\tclassName=\"favorite-icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{!locale.favorited &&\n\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\ticon={[\"far\", \"heart\"]} \n\t\t\t\t\t\t\tonClick={() => dispatch(setFavorite({ id: locale.id, favorite: true, allLocales: allLocales.locales }))} \n\t\t\t\t\t\t\tonMouseOver={showTooltip}\n\t\t\t\t\t\t\tonMouseOut={hideTooltip}\n\t\t\t\t\t\t\tclassName=\"favorite-icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</HeartIconContainer>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tCurrent Weather:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"2\">\n\t\t\t\t<InfoText className=\"description-text\">\n\t\t\t\t\t{locale.descriptions.map((desc, idx) =>\n\t\t\t\t\t\t<React.Fragment key={`${desc}-${idx}`}>{desc}</React.Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"3\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tWind:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"3\" col=\"2\">\n\t\t\t\t<InfoText className=\"wind-text\">\n\t\t\t\t\t{`${getDirectionForDegrees(locale.windDirection) || 0}, ${locale.windSpeed} ${units.windSpeed}`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"4\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tPressure:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"4\" col=\"2\">\n\t\t\t\t<InfoText className=\"pressure-text\">\n\t\t\t\t\t{`${locale.pressure || 0} ${units.pressure}`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"5\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tRain:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"5\" col=\"2\">\n\t\t\t\t<InfoText className=\"rain-text\">\n\t\t\t\t\t{`${get(locale.rain, \"1h\", undefined) || get(locale.rain, \"3h\", 0)} ${units.precip}`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"6\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tSnow:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"6\" col=\"2\">\n\t\t\t\t<InfoText className=\"snow-text\">\n\t\t\t\t\t{`${get(locale.snow, \"1h\", undefined) || get(locale.snow, \"3h\", 0)} ${units.totalSnow}`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"7\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tCloud Cover:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"7\" col=\"2\">\n\t\t\t\t<InfoText className=\"cloud-cover-text\">\n\t\t\t\t\t{`${locale.cloudCover || 0}%`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"8\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tHumidity:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"8\" col=\"2\">\n\t\t\t\t<InfoText className=\"humidity-text\">\n\t\t\t\t\t{`${locale.humidity || 0}%`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"9\">\n\t\t\t\t<InfoLabel>\n\t\t\t\t\tVisibility:\n\t\t\t\t</InfoLabel>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"9\" col=\"2\">\n\t\t\t\t<InfoText className=\"visibility-text\">\n\t\t\t\t\t{`${locale.visibility || 0} ${units.visibility}`}\n\t\t\t\t</InfoText>\n\t\t\t</Cell>\n\t\t</Grid>\n\t)\n}\n\nexport default DetailedInfoContainer;","import { inRange } from \"lodash\";\n\nexport const getDirectionForDegrees = (deg) => {\n\tswitch(true) {\n\t\tcase deg > 349 || deg < 11: return \"N\";\n\t\tcase inRange(deg, 12, 33): return \"NNE\";\n\t\tcase inRange(deg, 34, 56): return \"NE\";\n\t\tcase inRange(deg, 57, 78): return \"ENE\";\n\t\tcase inRange(deg, 79, 101): return \"E\";\n\t\tcase inRange(deg, 102, 123): return \"ESE\";\n\t\tcase inRange(deg, 124, 146): return \"SE\";\n\t\tcase inRange(deg, 147, 168): return \"SSE\";\n\t\tcase inRange(deg, 169, 191): return \"S\";\n\t\tcase inRange(deg, 192, 213): return \"SSW\";\n\t\tcase inRange(deg, 214, 236): return \"SW\";\n\t\tcase inRange(deg, 237, 258): return \"WSW\";\n\t\tcase inRange(deg, 259, 281): return \"W\";\n\t\tcase inRange(deg, 282, 303): return \"WNW\";\n\t\tcase inRange(deg, 304, 326): return \"NW\";\n\t\tcase inRange(deg, 327, 248): return \"NNW\";\n\t\tdefault: return \"Variable wind direction\";\n\t}\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"../layout/grid-items\";\nimport Tooltip from \"./tooltip\";\nimport { noop } from \"lodash\";\n\nconst NewNoteInput = styled.textarea`\n\twidth: 100%;\n\theight: 100%;\n\tcolor: rgb(255, 255, 255);\n\tbackground-color: transparent;\n\tborder: 2px solid ${p => p.error ? \"rgba(255, 0, 0, 0.3)\": \"#22223B\"};\n\tborder-radius: 12px;\n\tpadding: 1em;\n\tbox-sizing: border-box;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\n`;\n\nconst Button = styled.div`\n\tcursor: pointer;\n\topacity: 0.7;\n\ttext-align: ${p => p.submit ? \"right\" : \"left\"};\n\tline-height: 5em;\n\tfont-size: 1.2em;\n\tbox-sizing: border-box;\n\n\t:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst CharTracker = styled.div`\n\tfont-weight: 200;\n\tletter-spacing: 1px;\n\ttext-align: left;\n\tline-height: 5em;\n\tbox-sizing: border-box;\n\tfont-size: 1.2em;\n`;\n\nconst NoteInput = ({\n\tid,\n\ttext = \"\",\n\tonSubmit = noop,\n\tonCancel = noop,\n}) => {\n\tconst [ value, setValue ] = React.useState(text);\n\tconst [ tooltip, setTooltip ] = React.useState({\n\t\tid: -1,\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\tconst [ error, setError ] = React.useState(false);\n\tconst textFieldRef = React.useRef();\n\n\tReact.useEffect(() => {\n\t\tsetValue(text);\n\t}, [text]);\n\n\tReact.useEffect(() => {\n\t\tif (textFieldRef.current) {\n\t\t\ttextFieldRef.current.focus();\n\t\t}\n\t}, []);\n\n\tconst hideTooltips = () => {\n\t\tsetTooltip({\n\t\t\t...tooltip,\n\t\t\tid: -1,\n\t\t});\n\t}\n\t\n\tconst showSubmitTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tid: 0,\n\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t});\n\t}\n\n\tconst showCancelTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tid: 1,\n\t\t\tx: evt.target.getBoundingClientRect().right,\n\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t})\n\t}\n\n\tconst handleSubmit = () => {\n\t\tif (error) {\n\t\t\treturn;\n\t\t}\n\n\t\tonSubmit(id, value);\n\t\tonCancel();\n\t}\n\n\tconst handleCancel = () => {\n\t\tsetValue(text);\n\t\tonCancel();\n\t}\n\n\tconst handleKeyUp = ({ key }) => {\n\t\tswitch(true) {\n\t\t\tcase key === \"Enter\": {\n\t\t\t\tif (error) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thandleSubmit();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcase key === \"Escape\": {\n\t\t\t\thandleCancel();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleInput = ({target}) => {\n\t\tif (target.value.length === 0) {\n\t\t\tsetValue(target.value);\n\t\t\tsetError(true);\n\t\t} else {\n\t\t\tsetValue(target.value);\n\t\t\tsetError(false);\n\t\t}\n\t}\n\t\n\n\treturn (\n\t\t<Grid rows=\"10em 5em\" columns=\"1fr 1fr 1fr\">\n\t\t\t<Tooltip \n\t\t\t\tshow={tooltip.id === 0} \n\t\t\t\tx={tooltip.x} \n\t\t\t\ty={tooltip.y} \n\t\t\t\ttext=\"Submit\"\n\t\t\t/>\n\t\t\t<Tooltip \n\t\t\t\tshow={tooltip.id === 1}\n\t\t\t\tx={tooltip.x}\n\t\t\t\ty={tooltip.y}\n\t\t\t\ttext=\"Abandon Changes\"\n\t\t\t/>\n\t\t\t<Cell col=\"1/span 3\">\n\t\t\t\t<NewNoteInput \n\t\t\t\t\tmaxLength=\"460\"\n\t\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\t\terror={error}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleInput}\n\t\t\t\t\tref={textFieldRef}\n\t\t\t\t\tplaceholder={error ? \"This field can't be empty! :(\" : \"Enter your note here and press the send button or hit Enter to submit. :)\"}\n\t\t\t\t\tclassName=\"note-input\"\n\t\t\t\t/>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"1\">\n\t\t\t\t<Button onClick={handleCancel} submit={false}>\n\t\t\t\t\t<Icon \n\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\tonMouseOver={showCancelTooltip}\n\t\t\t\t\t\tonMouseOut={hideTooltips}\n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"2\">\n\t\t\t\t<CharTracker>\n\t\t\t\t\t{`${value.length}/460`}\n\t\t\t\t</CharTracker>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"3\">\n\t\t\t\t<Button onClick={handleSubmit} submit={true}>\n\t\t\t\t\t<Icon \n\t\t\t\t\t\ticon=\"paper-plane\"\n\t\t\t\t\t\tonMouseOver={showSubmitTooltip}\n\t\t\t\t\t\tonMouseOut={hideTooltips} \n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t</Cell>\n\t\t</Grid>\n\t)\n}\n\nexport default NoteInput;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { noop } from \"lodash\";\nimport { Grid, Cell } from \"../../../../layout/grid-items\";\nimport Tooltip from \"../../../../components/tooltip\";\n\nconst ParentGrid = styled(Grid)`\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\tborder-bottom: 1px solid rgba(255, 255, 255, 0.5);\n`;\n\nconst NoteDisplay = styled.div`\n\twidth: 100%;\n\theight: min-content;\n\tcolor: rgb(255, 255, 255);\n\toverflow: hidden;\n\tpadding-top: .75em;\n\ttext-align: justify;\n\ttext-justify: auto;\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n`;\n\nconst TimestampDisplay = styled.div`\n\tline-height: 1.25em;\n\tfont-weight: 200;\n\ttext-align: justify;\n\ttext-justify: auto;\n\tfont-size: 0.75em;\n`;\n\nconst Button = styled.div`\n\ttext-align: right;\n\topacity: 0.7;\n\tline-height: 1.25em;\n\tfont-size: 1.25em;\n\tcursor: pointer;\n\n\t:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst NoteModule = ({\n\tnote,\n\thandleEditClicked = noop,\n\thandleDeleteClicked = noop,\n}) => {\n\tconst [ tooltip, setTooltip ] = React.useState({\n\t\tid: -1,\n\t\tx: 0,\n\t\ty: 0,\n\t});\n\n\tconst showDeleteTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tid: 0,\n\t\t\tx: evt.target.getBoundingClientRect().left,\n\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t});\n\t}\n\n\tconst showEditTooltip = (evt) => {\n\t\tsetTooltip({\n\t\t\tid: 1,\n\t\t\tx: evt.target.getBoundingClientRect().left,\n\t\t\ty: evt.target.getBoundingClientRect().top - 20\n\t\t});\n\t}\n\n\tconst hideTooltips = () => {\n\t\tsetTooltip({\n\t\t\t...tooltip,\n\t\t\tid: -1\n\t\t});\n\t}\n\n\tif (note === undefined) return null;\n\n\treturn (\n\t\t<ParentGrid rows=\"min-content 2em\" columns=\"1fr 1fr 1fr\">\n\t\t\t<Tooltip\n\t\t\t\tshow={tooltip.id === 0}\n\t\t\t\ttext=\"Delete Note\"\n\t\t\t\tx={tooltip.x}\n\t\t\t\ty={tooltip.y}\n\t\t\t/>\n\t\t\t<Tooltip\n\t\t\t\tshow={tooltip.id === 1}\n\t\t\t\ttext=\"Edit Note\"\n\t\t\t\tx={tooltip.x}\n\t\t\t\ty={tooltip.y}\n\t\t\t/>\n\t\t\t<Cell col=\"1/span 3\">\n\t\t\t\t<NoteDisplay className=\"note-body-text\">\n\t\t\t\t\t{note.body}\n\t\t\t\t</NoteDisplay>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\">\n\t\t\t\t<TimestampDisplay className=\"note-timestamp-text\">\n\t\t\t\t\t{note.timeStamp}\n\t\t\t\t</TimestampDisplay>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"2\">\n\t\t\t\t<Button>\n\t\t\t\t\t<Icon \n\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\tonMouseOver={showEditTooltip}\n\t\t\t\t\t\tonMouseOut={hideTooltips}\n\t\t\t\t\t\tonClick={handleEditClicked}\n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t</Cell>\n\t\t\t<Cell row=\"2\" col=\"3\">\n\t\t\t\t<Button>\n\t\t\t\t\t<Icon\n\t\t\t\t\t\ticon=\"trash\"\n\t\t\t\t\t\tonClick={handleDeleteClicked}\n\t\t\t\t\t\tonMouseOver={showDeleteTooltip}\n\t\t\t\t\t\tonMouseOut={hideTooltips}\n\t\t\t\t\t/>\n\t\t\t\t</Button>\n\t\t\t</Cell>\n\t\t</ParentGrid>\n\t)\n}\n\nexport default NoteModule;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectNotesByLocale, mergeNotes, deleteById } from \"../../../../state/notes-slice\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"../../../../layout/grid-items\";\nimport NoteInput from \"../../../../components/note-input\";\nimport NoteModule from \"./note-element\";\nimport { uniqueId } from \"lodash\";\n\nconst NoteEntryGrid = styled(Grid)`\n\tmin-width: 700px;\n\ttext-align: left;\n\toverflow: visible;\n\tgrid-column-gap: 60px;\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n`;\n\nconst HeaderCell = styled(Cell)`\n\tfont-weight: 800;\n\topacity: 0.7;\n\tcursor: pointer;\n\toverflow-x: hidden;\n\toverflow-y: visible;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\tletter-spacing: 1px;\n\tline-height: 3em;\n\n\t:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst NotesCell = styled(Cell)`\n\tfont-weight: 300;\n\toverflow: hidden;\n\toverflow-y: auto;\n\tmin-height: 20em;\n\tpadding-right: 1.5em;\n\ttransition-property: width;\n\ttransition-duration: 0.5s;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\n`;\n\nconst NotesContainer = ({\n\tlocale\n}) => {\n\tconst timeStamp = Date();\n\n\tconst [ showNewNoteField, setShowNewNoteField ] = React.useState(false);\n\tconst [ editActive, setEditActive ] = React.useState(\"-1\");\n\n\tconst dispatch = useDispatch();\n\tconst notes = useSelector((state) => selectNotesByLocale(state, locale.id));\n\n\tconst handleNewNoteSubmitted = (id, body) => {\n\t\tconst newNote = {\n\t\t\tid,\n\t\t\tbody,\n\t\t\tlocaleId: locale.id,\n\t\t\ttimeStamp,\n\t\t}\n\n\t\tdispatch(mergeNotes([ newNote ]));\n\t}\n\n\tconst handleEditSubmitted = (id, body) => {\n\t\tconst edited = {\n\t\t\tid,\n\t\t\tbody,\n\t\t\tlocaleId: locale.id,\n\t\t\ttimeStamp\n\t\t}\n\n\t\tdispatch(mergeNotes([ edited ]));\n\t}\n\n\tconst handleNoteDeleted = (id) => {\n\t\tdispatch(deleteById(id));\n\t}\n\n\treturn (\n\t\t<NoteEntryGrid\n\t\t\trows=\"3em auto\"\n\t\t\tcolumns={showNewNoteField ? \"500px 1fr\" : \"200px 1fr\"}\n\t\t\tgridGap=\"20px\"\n\t\t>\n\t\t\t<HeaderCell>\n\t\t\t\t<Grid rows=\"auto\" gridGap=\"10px\" columns=\"min-content min-content\" onClick={() => setShowNewNoteField(!showNewNoteField)}>\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\tAdd New Note\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell col=\"2\">\n\t\t\t\t\t\t<Icon icon=\"sticky-note\" />\n\t\t\t\t\t</Cell>\n\t\t\t\t</Grid>\n\t\t\t</HeaderCell>\n\t\t\t<Cell row=\"2\">\n\t\t\t\t{showNewNoteField &&\n\t\t\t\t\t<NoteInput\n\t\t\t\t\t\tid={uniqueId(`note-${timeStamp}-`)}\n\t\t\t\t\t\tonCancel={() => setShowNewNoteField(false)}\n\t\t\t\t\t\tonSubmit={handleNewNoteSubmitted}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</Cell>\n\t\t\t<NotesCell col=\"2\">\n\t\t\t\t{notes.length !== 0 && \n\t\t\t\t\t<Grid rows={`repeat(${notes.length}, calc(min-content + .25em))`}>\n\t\t\t\t\t\t{notes.map((note, idx) => \n\t\t\t\t\t\t\t<React.Fragment key={`${note.id}-${idx}`}>\n\t\t\t\t\t\t\t\t{editActive.localeCompare(note.id) === 0 &&\n\t\t\t\t\t\t\t\t\t<NoteInput\n\t\t\t\t\t\t\t\t\t\tid={note.id}\n\t\t\t\t\t\t\t\t\t\ttext={note.body}\n\t\t\t\t\t\t\t\t\t\tonCancel={() => setEditActive(\"-1\")}\n\t\t\t\t\t\t\t\t\t\tonSubmit={handleEditSubmitted}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{editActive.localeCompare(note.id) !== 0 &&\n\t\t\t\t\t\t\t\t\t<NoteModule\n\t\t\t\t\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\t\t\t\t\thandleEditClicked={() => setEditActive(note.id)}\n\t\t\t\t\t\t\t\t\t\thandleDeleteClicked={() => handleNoteDeleted(note.id)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t</NotesCell>\n\t\t</NoteEntryGrid>\n\t)\n}\n\nexport default NotesContainer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\nimport Card from \"../../layout/card\";\nimport * as CONSTANTS from \"../../app/constants\";\nimport MainInfoContainer from \"./detail-card-elements/main-info-container\";\nimport DetailedInfoContainer from \"./detail-card-elements/detailed-info-container\";\nimport NotesContainer from \"./detail-card-elements/notes/note-container\";\n\nconst Parent = styled(Grid)`\n\tpadding: 2em;\n\tposition: relative;\n\tmin-width: 700px;\n\toverflow: visible;\n\tmin-height: 60vh;\n`;\n\nconst StyledCard = styled(Card)`\n\tpadding: 2.5em;\n\toverflow-y: auto;\n\tbackground: #4A4E69;\n\n\twidth: 100%;\n\theight: 100%;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\n`;\n\n\n\nconst Divider = styled.hr`\n\twidth: 100%;\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateY(-50%) translateX(-50%);\n\tborder: 1px solid rgba(255, 255, 255, 0.5);\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nconst HiddenHeader = styled.h1`\n\toverflow: hidden;\n\tposition: fixed;\n\theight: 0px;\n\twidth: 0px;\n\topacity: 0;\n`;\n\nconst getUnits = (scale) => {\n\tswitch (true) {\n\t\tcase scale.localeCompare(CONSTANTS.METRIC_SCALE) === 0:\n\t\t\treturn CONSTANTS.METRIC_UNITS;\n\t\tcase scale.localeCompare(CONSTANTS.FAHRENHEIT_SCALE) === 0:\n\t\t\treturn CONSTANTS.FAHRENHEIT_UNITS;\n\t\tcase scale.localeCompare(CONSTANTS.SCIENTIFIC_SCALE) === 0:\n\t\t\treturn CONSTANTS.SCIENTIFIC_UNITS;\n\t\tdefault: return CONSTANTS.METRIC_UNITS;\n\t}\n}\n\n\n\n/**\n * Displays the weather details for a specific location.\n * \n * @param {*} param0 \n */\nconst DetailsCard = ({\n\tlocale\n}) => {\n\n\tif (locale === undefined) return null;\n\n\tconst units = getUnits(locale.scale);\n\n\treturn (\n\t\t<Parent>\n\t\t\t<Cell>\n\t\t\t\t<StyledCard>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\trows=\"19em 1em 20em\"\n\t\t\t\t\t\tcolumns=\"minmax(360px, 510px) minmax(160px, 1fr) minmax(160px, 1fr)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t<HiddenHeader>detail-card</HiddenHeader>\n\t\t\t\t\t\t\t<MainInfoContainer locale={locale} time={locale.observationTime} units={units} />\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell col=\"2/span 2\">\n\t\t\t\t\t\t\t<DetailedInfoContainer locale={locale} units={units} time={locale.observationTime} />\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell row=\"2\" col=\"1/span 3\">\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell row=\"3\" col=\"1/span 3\">\n\t\t\t\t\t\t\t<NotesContainer locale={locale} />\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</Grid>\n\t\t\t\t</StyledCard>\n\t\t\t</Cell>\n\t\t</Parent>\n\t)\n}\n\nexport default DetailsCard;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Layout from \"../../layout/navbar-layout\";\nimport { selectLocaleById } from \"../../state/locales-slice\";\nimport { updateRoute } from \"../../state/router-slice\";\nimport DetailsCard from \"./detail-card\";\n\nconst Body = ({ locale }) => {\n\treturn(\n\t\t<DetailsCard locale={locale} />\n\t)\n};\n\nconst Details = ({ id, activeRoute, allRoutes }) => {\n\tconst dispatch = useDispatch();\n\tconst locale = useSelector((state) => selectLocaleById(state, id));\n\n\tif (locale === undefined) {\n\t\t//Redirect to error page\n\t\tdispatch(updateRoute(-1));\n\t}\n\n\treturn (\n\t\t<Layout\n\t\t\tMain={() => <Body locale={locale} />}\n\t\t\tactiveRoute={activeRoute}\n\t\t\tallRoutes={allRoutes}\n\t\t/>\n\t);\n};\n\nexport default Details;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../../layout/navbar-layout\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\nimport Card from \"../../layout/card\";\n\nconst Parent = styled(Grid)`\n\tpadding: 2em;\n\tposition: relative;\n\tmin-width: 700px;\n\toverflow: visible;\n\tmin-height: 60vh;\n`;\n\nconst StyledCard = styled(Card)`\n\tpadding: 2.5em;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tbackground: #4A4E69;\n\ttext-align: left;\n\n\twidth: 100%;\n\theight: 100%;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\t\n`;\n\nconst HeaderText = styled.div`\n\tfont-size: 2em;\n\tfont-weight: 800;\n`;\n\nconst BodyText = styled.div`\n\tletter-spacing: 1px;\n\tfont-weight: 300;\n\n\ta:link {\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t}\n\n\ta:visited {\n\t\tcolor: rgba(255, 255, 255, 0.4);\n\t}\n\n\ta:hover {\n\t\tcolor: rgb(255, 255, 255);\n\t}\n`;\n\nconst Body = () => {\n\treturn (\n\t\t<Parent>\n\t\t\t<StyledCard>\n\t\t\t\t<Grid rows=\"3em auto\">\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t<HeaderText className=\"header-text\">\n\t\t\t\t\t\t\tAbout Umbrella Whether:\n\t\t\t\t\t\t</HeaderText>\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell row=\"2\">\n\t\t\t\t\t\t<BodyText>\n\t\t\t\t\t\t\tUmbrella Whether is a simple weather-tracking app created using React and <a href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenWeatherMap</a>'s current weather API.<br/><br/>\n\n\t\t\t\t\t\t\tAll icons used in the app are courtesy <a href=\"https://fontawesome.com/license/free\" target=\"_blank\" rel=\"noopener noreferrer\">Font Awesome</a>.\n\t\t\t\t\t\t</BodyText>\n\t\t\t\t\t</Cell>\n\t\t\t\t</Grid>\n\t\t\t</StyledCard>\n\t\t</Parent>\n\t)\n}\n\nconst About = ({ activeRoute, allRoutes }) => {\n\treturn (\n\t\t<Layout\n\t\t\tMain={() => <Body />}\n\t\t\tactiveRoute={activeRoute}\n\t\t\tallRoutes = {allRoutes}\n\t\t/>\n\t)\n}\n\nexport default About;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../../layout/navbar-layout\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\nimport Card from \"../../layout/card\";\n\nconst Parent = styled(Grid)`\n\tpadding: 2em;\n\tposition: relative;\n\tmin-width: 700px;\n\toverflow: visible;\n\tmin-height: 60vh;\n`;\n\nconst StyledCard = styled(Card)`\n\tpadding: 2.5em;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tbackground: #4A4E69;\n\ttext-align: left;\n\n\twidth: 100%;\n\theight: 100%;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\t\n`;\n\nconst HeaderText = styled.div`\n\tfont-size: 2em;\n\tfont-weight: 800;\n`;\n\nconst BodyText = styled.div`\n\tletter-spacing: 1px;\n\tfont-weight: 300;\n\n\ta:link {\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t}\n\n\ta:visited {\n\t\tcolor: rgba(255, 255, 255, 0.4);\n\t}\n\n\ta:hover {\n\t\tcolor: rgb(255, 255, 255);\n\t}\n`;\n\nconst Body = () => {\n\treturn (\n\t\t<Parent>\n\t\t\t<StyledCard>\n\t\t\t\t<Grid rows=\"3em auto\">\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t<HeaderText className=\"header-text\">\n\t\t\t\t\t\t\tSomething went wrong!\n\t\t\t\t\t\t</HeaderText>\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell row=\"2\">\n\t\t\t\t\t\t<BodyText>\n\t\t\t\t\t\t\tYou've managed to end up on a page that doesn't exist. Impressive!\n\t\t\t\t\t\t</BodyText>\n\t\t\t\t\t</Cell>\n\t\t\t\t</Grid>\n\t\t\t</StyledCard>\n\t\t</Parent>\n\t)\n}\n\nconst ErrorPage = ({ allRoutes, currentRoute }) => {\n\treturn (\n\t\t<Layout\n\t\t\tMain={<Body />}\n\t\t\tallRoutes={allRoutes}\n\t\t\tcurrentRoute={currentRoute}\n\t\t/>\n\t)\n}\n\nexport default ErrorPage;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Layout from \"../../layout/navbar-layout\";\nimport { Grid, Cell } from \"../../layout/grid-items\";\nimport Card from \"../../layout/card\";\n\nconst Parent = styled(Grid)`\n\tpadding: 2em;\n\tposition: relative;\n\tmin-width: 700px;\n\toverflow: visible;\n\tmin-height: 60vh;\n`;\n\nconst StyledCard = styled(Card)`\n\tpadding: 2.5em;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tbackground: #4A4E69;\n\ttext-align: left;\n\n\twidth: 100%;\n\theight: 100%;\n\n\t::-webkit-scrollbar {\n\t\twidth: 4px;\n\t}\n\n\t::-webkit-scrollbar-track {\n\t\topacity: 0;\n\t}\n\n\t::-webkit-scrollbar-thumb {\n\t\tborder-radius: 10px;\n\t\tbackground: #22223B;\n\t}\n\n\tscrollbar-color: #22223B;\n\tscrollbar-width: 4px;\t\n`;\n\nconst HeaderText = styled.div`\n\tfont-size: 2em;\n\tfont-weight: 800;\n`;\n\nconst BodyText = styled.div`\n\tletter-spacing: 1px;\n\tfont-weight: 300;\n\n\ta:link {\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t}\n\n\ta:visited {\n\t\tcolor: rgba(255, 255, 255, 0.4);\n\t}\n\n\ta:hover {\n\t\tcolor: rgb(255, 255, 255);\n\t}\n`;\n\nconst SectionHeader = styled.span`\n\tletter-spacing: 1px;\n\tfont-weight: 500;\n`;\n\nconst Body = () => {\n\treturn (\n\t\t<Parent>\n\t\t\t<StyledCard>\n\t\t\t\t<Grid rows=\"3em auto\">\n\t\t\t\t\t<Cell>\n\t\t\t\t\t\t<HeaderText className=\"header-text\">\n\t\t\t\t\t\t\tHelp\n\t\t\t\t\t\t</HeaderText>\n\t\t\t\t\t</Cell>\n\t\t\t\t\t<Cell row=\"2\">\n\t\t\t\t\t\t<BodyText>\n\t\t\t\t\t\t\t<SectionHeader>\n\t\t\t\t\t\t\t\tUmbrella Whether: <br/><br/>\n\t\t\t\t\t\t\t</SectionHeader>\n\t\t\t\t\t\t\t\tAt the top of any given page on Umbrella Whether, there will appear: <br/>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li>A search bar. You can search for weather by city using this bar. For more specificity, you can enter a comma-separated city and country, or city and US state. If the location in question is found, you will be brought to its page and the location will be added to your home screen list for later.</li>\n\t\t\t\t\t\t\t\t\t\t<li>A Celsius/Fahrenheit button which can be used to switch between units as desired. This function is only available when online.</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<SectionHeader>\n\t\t\t\t\t\t\t\tHome Page: <br/> <br/>\n\t\t\t\t\t\t\t</SectionHeader>\n\n\t\t\t\t\t\t\t\tFrom the home page, the list of stored locations can be maintained. You can delete entries from the list, or click on the eye icon or the location name to view more detailed information about the current weather status. Clicking the heart icon will add the location to your favorites, which will move it to the top of the list.\n\t\t\t\t\t\t\t\t<br/><br/>\n\t\t\t\t\t\t\t\tPlease note that deleting entries from the location list will also delete any associated notes.\n\t\t\t\t\t\t\t\t<br/><br/>\n\n\t\t\t\t\t\t\t<SectionHeader>\n\t\t\t\t\t\t\t\tDetails Page: <br/><br/>\n\t\t\t\t\t\t\t</SectionHeader>\n\n\t\t\t\t\t\t\tOn clicking the eye icon or name of a given location, you will be brought to a page displaying more detailed information on the current weather status. Also on this page, you may click 'Add a Note' to add a new note, after which it will appear on that details page for this and any future viewings, providing local storage is not cleared. <br/><br/>\n\n\t\t\t\t\t\t\tExisting notes may be edited using the pen/edit button or deleted using the trash can button.\n\t\t\t\t\t\t</BodyText>\n\t\t\t\t\t</Cell>\n\t\t\t\t</Grid>\n\t\t\t</StyledCard>\n\t\t</Parent>\n\t)\n}\n\nconst Help = ({ activeRoute, allRoutes }) => {\n\treturn (\n\t\t<Layout\n\t\t\tMain={Body}\n\t\t\tactiveRoute={activeRoute}\n\t\t\tallRoutes={allRoutes}\n\t\t/>\n\t)\n}\n\nexport default Help;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectActive, selectAllRoutes } from \"./state/router-slice\";\nimport Home from \"./pages/home/index\";\nimport Details from \"./pages/details/index\";\nimport About from \"./pages/about/index\";\nimport ErrorPage from \"./pages/error_page/index\";\nimport HelpPage from \"./pages/help/index\";\n\nexport default () => {\n\tconst currentRoute = useSelector(selectActive);\n\tconst allRoutes = useSelector(selectAllRoutes);\n\n\tswitch (true) {\n\t\tcase (currentRoute === allRoutes.home):\n\t\t\treturn <Home activeRoute={currentRoute} allRoutes={allRoutes} />;\n\t\tcase /^details/.test(currentRoute): {\n\t\t\t//Split the route into route + id\n\t\t\tconst portions = currentRoute.split(/-(.+)/);\n\t\t\t//Isolate the id from the route pattern\n\t\t\tconst id = portions[1];\n\t\t\t//Use the id to fetch the correct details\n\t\t\treturn <Details activeRoute={currentRoute} allRoutes={allRoutes} id={id} />;\n\t\t}\n\t\tcase (currentRoute === allRoutes.about):\n\t\t\treturn <About activeRoute={currentRoute} allRoutes={allRoutes} />\n\t\tcase (currentRoute === \"help\"):\n\t\t\treturn <HelpPage activeRoute={currentRoute} allRoutes={allRoutes} />\n\t\tdefault: return <ErrorPage activeRoute={currentRoute} allRoutes={allRoutes} />;\n\t}\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport routerReducer from \"./router-slice\";\nimport localesReducer from \"./locales-slice\";\nimport notesReducer from \"./notes-slice\";\nimport appSettingsReducer from \"./app-settings-slice\";\nimport { throttle } from \"lodash\";\nimport { saveState, loadState } from \"./persistence/save-load\";\n\nconst store =  configureStore({\n\treducer: {\n\t\trouter: routerReducer,\n\t\tlocales: localesReducer,\n\t\tnotes: notesReducer,\n\t\tsettings: appSettingsReducer,\n\t},\n\tpreloadedState: loadState()\n});\n\n//Persist the current state tree to storage at most every 10 seconds\nstore.subscribe(throttle(\n\t() => saveState(store.getState(), 10000)\n));\n\nexport default store;","/**\n * Persists the current state tree to local storage.\n * Returns true if saving succeeds.\n * @param {obj} state \n */\nexport const saveState = (state) => {\n\ttry {\n\t\tconst serialized = JSON.stringify(state);\n\t\tlocalStorage.setItem('umbrella-whether-state', serialized);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tthrow err;\n\t}\n\n\treturn true;\n};\n\n/**\n * Loads stored state from localstorage.\n */\nexport const loadState = () => {\n\ttry {\n\t\tconst serialized = localStorage.getItem('umbrella-whether-state');\n\n\t\t//If nothing is found, return undefined\n\t\tif (serialized === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn JSON.parse(serialized);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\treturn undefined;\n\t}\n}","import React from 'react';\nimport Router from \"./router\";\nimport { useDispatch } from \"react-redux\";\nimport { updateRoute } from \"./state/router-slice\";\nimport './App.css';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { \n  faUmbrella, \n  faSearch, \n  faMinusCircle, \n  faHome, \n  faInfoCircle, \n  faQuestionCircle, \n  faHeart as fullHeart,\n  faMoon,\n  faCloudSun,\n  faCloudMoon,\n  faCloudSunRain,\n  faCloudMoonRain,\n  faSmog,\n  faSnowflake,\n  faWind,\n  faCloudRain,\n  faBolt,\n  faCloudShowersHeavy,\n  faSurprise,\n  faStickyNote,\n  faEdit,\n  faEraser,\n  faPaperPlane,\n  faTrash,\n  faCheck,\n  faTimes\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faEye, faHeart as emptyHeart, faSun } from \"@fortawesome/free-regular-svg-icons\";\nimport { Provider } from \"react-redux\";\nimport store from \"./state/state\";\n\n//Add fontawesome import to library\nlibrary.add(\n  faUmbrella, \n  faSearch, \n  faEye, \n  faMinusCircle, \n  faHome, \n  faInfoCircle, \n  faQuestionCircle, \n  fullHeart, \n  emptyHeart,\n  faSun,\n  faMoon,\n  faCloudSun,\n  faCloudMoon,\n  faCloudSunRain,\n  faCloudMoonRain,\n  faSmog,\n  faSnowflake,\n  faWind,\n  faCloudRain,\n  faBolt,\n  faCloudShowersHeavy,\n  faSurprise,\n  faStickyNote,\n  faEdit,\n  faEraser,\n  faPaperPlane,\n  faTrash,\n  faCheck,\n  faTimes,\n);\n\nconst AppWrapper = () => {\n  //Wrap app in a provider\n  return (\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  )\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(updateRoute(\"home\"));\n\n  return (\n    <div className=\"App\">\n        <Router />\n    </div>\n  );\n}\n\nexport default AppWrapper;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}